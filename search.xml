<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>vscode打造shell脚本IDE【转】</title>
    <url>/2022/11/22/VS%20code%E6%89%93%E9%80%A0shell%E8%84%9A%E6%9C%ACIDE/</url>
    <content><![CDATA[<p>本文介绍如何简单配置vscode，使其成为好用的shell脚本编辑器。同时分享一些shell相关的学习资料。</p>
<span id="more"></span>

<h2 id="VS-code打造shell脚本IDE【转】"><a href="#VS-code打造shell脚本IDE【转】" class="headerlink" title="VS code打造shell脚本IDE【转】"></a>VS code打造shell脚本IDE【转】</h2><p>近期多了些开发shell脚本的需求，便做了些研究，于是发现：</p>
<ol>
<li>shell没有专用的IDE</li>
<li>老手们习惯了vim的开发方式，干起活来非常黑客。但对新人，不太友好</li>
</ol>
<p>既然没有现成的，那就用插件组一套，软件依然是vscode。</p>
<h4 id="1-shellman"><a href="#1-shellman" class="headerlink" title="1. shellman"></a>1. shellman</h4><p>说起IDE，第一时间想到的必然是智能提示和自动补全，shellman全部搞定</p>
<p><img src="https://s2.loli.net/2022/11/22/gy6PcdSmQkULB7Z.png" alt="img"></p>
<p>下载后，新建test.bash文件，输入case，可见如下结果：</p>
<p><img src="https://s2.loli.net/2022/11/22/fDmVr9TxEhlkOni.jpg" alt="img"></p>
<p>选中提示中的第一个，然后就获得了if全家桶：</p>
<p><img src="https://s2.loli.net/2022/11/22/eKMrgNvDEGuftRX.jpg" alt="img"></p>
<p>由上面两张图可见shellman的提示是比较系统的。</p>
<h4 id="2-shellcheck"><a href="#2-shellcheck" class="headerlink" title="2. shellcheck"></a>2. shellcheck</h4><p>有了自动补全，然后就是语法错误检查了</p>
<p><img src="https://s2.loli.net/2022/11/22/JPH5Nb1TQGSRsgI.jpg" alt="img"></p>
<p>安装成功后，再写代码就会出现如下的错误提示：</p>
<p><img src="https://s2.loli.net/2022/11/22/t3o67U1Sbr9Ggzi.png" alt="img"></p>
<h4 id="3-shell-format"><a href="#3-shell-format" class="headerlink" title="3. shell-format"></a>3. shell-format</h4><p>脚本写好了，当然要格式化一下</p>
<p><img src="https://s2.loli.net/2022/11/22/FU9BTz8aRpr4vuW.jpg" alt="img"></p>
<p>快捷键：Alt+Shift+F</p>
<h4 id="4-Code-Runner"><a href="#4-Code-Runner" class="headerlink" title="4. Code Runner"></a>4. Code Runner</h4><p>在vs code里开发，在vs code里纠错，又在vs code里格式化，到了调试不会要去命令行吧！</p>
<p><img src="https://s2.loli.net/2022/11/22/ravESXh56Gm9n1Y.jpg" alt="img"></p>
<p>安装完后，如果出现require reload的字样，请重启vs code。然后对刚才创建的test.bash右键，（或者在文件里右键）：</p>
<p><img src="https://s2.loli.net/2022/11/22/KYPw9SzsIXUbrDJ.jpg" alt="img"></p>
<h4 id="5-配置VSCode运行shell"><a href="#5-配置VSCode运行shell" class="headerlink" title="5. 配置VSCode运行shell"></a>5. 配置VSCode运行shell</h4><p><a href="http://link.zhihu.com/?target=https://www.cnblogs.com/yongdaimi/p/15247771.html">VSCode: Windows 下配置 VSCode运行shell</a></p>
<h3 id="shell编程资源"><a href="#shell编程资源" class="headerlink" title="shell编程资源"></a>shell编程资源</h3><p>shell是与Linux系统对话的门户，每个要与Linux对话的人都避免不了学习shell。市面上充斥着各种培训教材和培训课程，引导了shell的初学者入门，但又往往对学习shell的初学者产生误导，入门而无法深入。信息的社会里最不缺的就是信息，缺的是高质量的信息。如果有质量上乘权威的学习资料和手册，将会使想要学习shell的人少走很多弯路。我也是在学习shell的路上碰到了这些好的资料，发现其质量上乘，还是开放阅读的，相见恨晚，感于其被杂乱的信息所淹没，分享于此。</p>
<table>
<thead>
<tr>
<th>资源</th>
<th>地址</th>
</tr>
</thead>
<tbody><tr>
<td>高级Bash脚本编程指南-英文原版</td>
<td><a href="https://tldp.org/LDP/abs/html/">https://tldp.org/LDP/abs/html/</a></td>
</tr>
<tr>
<td>高级Bash脚本编程指南-中译本</td>
<td><a href="http://home.ustc.edu.cn/~stephen1/book/abs-guide-3.7-cn/HTML/index.html">http://home.ustc.edu.cn/~stephen1&#x2F;book&#x2F;abs-guide-3.7-cn&#x2F;HTML&#x2F;index.html</a></td>
</tr>
<tr>
<td>高级Bash脚本编程指南-中译本最新</td>
<td><a href="https://linuxstory.gitbook.io/advanced-bash-scripting-guide-in-chinese/">https://linuxstory.gitbook.io/advanced-bash-scripting-guide-in-chinese/</a></td>
</tr>
<tr>
<td>Bash Reference Manual</td>
<td><a href="https://www.gnu.org/software/bash/manual/bash.html">https://www.gnu.org/software/bash/manual/bash.html</a></td>
</tr>
<tr>
<td>Bash中文手册</td>
<td><a href="https://chegva.com/2777.html">https://chegva.com/2777.html</a></td>
</tr>
<tr>
<td>鸟哥的Linux私房菜</td>
<td><a href="http://cn.linux.vbird.org/linux_basic/linux_basic.php">http://cn.linux.vbird.org/linux_basic&#x2F;linux_basic.php</a></td>
</tr>
</tbody></table>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a><strong>参考</strong></h3><ul>
<li><a href="https://zhuanlan.zhihu.com/p/199187317">VS code打造shell脚本IDE</a></li>
<li><a href="https://chegva.com/3776.html">Shell调试技巧</a></li>
</ul>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title>docsify文档搭建</title>
    <url>/2022/11/04/docsify%E6%96%87%E6%A1%A3%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<p>本文主要介绍docsify文档系统的配置。顺便介绍了市场上主流的团队文档工具。读完本文，可以按文中步骤搭建一个可用的docsify文档系统。</p>
<span id="more"></span>

<h2 id="写作环境"><a href="#写作环境" class="headerlink" title="写作环境"></a>写作环境</h2><ul>
<li>vscode</li>
<li>vscode插件：Office Viewer(Markdown Editor)</li>
<li>nodejs</li>
<li>docsify-cli</li>
</ul>
<p>前提要安装好nodejs，然后用npm安装docsify-cli。</p>
<h2 id="文档工具对比"><a href="#文档工具对比" class="headerlink" title="文档工具对比"></a>文档工具对比</h2><p>文档工具市场上有很多产品可供选择，针对各种不同的用户群体和不同用途都可以找到合适的。可以从以下几点进行考虑和选择：</p>
<ul>
<li>用户群体：是个人使用还是团队使用，团队规模大小</li>
<li>协作性：是否利于团队协作</li>
<li>易用性：是否容易搭建，容易发布，容易上手</li>
<li>适配性：是否支持多端阅读与发布</li>
<li>数据：数据是私有化部署，还是托管给三方管理</li>
<li>部署：部署配置是否麻烦，产品成熟度如何，社区是否完善</li>
</ul>
<p>介绍几款用过的文档工具：</p>
<p><strong>商业版：</strong></p>
<ul>
<li>语雀：无法独立部署，团队协作需要付费</li>
<li>蚂蚁笔记：leanote</li>
</ul>
<p><strong>开源版：</strong></p>
<ul>
<li>docsify：简洁，无需编译，配置简单，部署简单，但功能较少。结合版本管理系统方便团队合作。</li>
<li>vuepress：适合个人博客文档。结合版本管理系统，方便团队协作。</li>
<li>hexo：适合个人博客文档。结合版本管理系统，方便团队协作。</li>
<li>showdoc：是个非常适合IT团队的在线API文档、技术文档工具，可独立部署，有商业版。</li>
<li>MinDoc：MinDoc 是一款针对IT团队开发的简单好用的文档管理系统，可独立部署。</li>
<li>Halo：一个java博客系统，开源可独立部署</li>
</ul>
<h2 id="docsify简介"><a href="#docsify简介" class="headerlink" title="docsify简介"></a>docsify简介</h2><p>docsify非常简洁轻量，唯一要求就是文档要用markdown来编写。只要配置好index.html及相关文件就可以部署了，部署完就可以很方便的将目录变成可以访问的网页了，特别适合对项目添加文档说明。下面重点讲docsify的配置。</p>
<h2 id="docsify配置"><a href="#docsify配置" class="headerlink" title="docsify配置"></a>docsify配置</h2><p>docsify的配置都在index.html文件里。功能的增强主要是通过插件来实现的，所以本文会介绍用到的相关插件。</p>
<p>先列下本文要实现的功能。</p>
<ul>
<li>要能实现搜索</li>
<li>要实现侧边栏，方便文档导航</li>
<li>侧边栏要能实现展开和收缩。</li>
<li>代码块能实现语法高亮</li>
<li>代码块要能实现复制功能</li>
<li>要能实现内容分页</li>
<li>使用VUE主题风格</li>
</ul>
<h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>以我的示例项目为例。我的项目目录是doc-template，文档放在doc-template&#x2F;docs文件夹里。那么按以下操作：</p>
<p>进入doc-template文件夹，打开终端，输入命令：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">docsify init ./docs</span><br></pre></td></tr></table></figure>

<p>在docs目录下就会生成以下文件：</p>
<ul>
<li>index.html</li>
<li>README.md</li>
<li>.nojekyll</li>
</ul>
<p>运行以下命令即可预览。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">docsify serve ./docs</span><br></pre></td></tr></table></figure>

<h3 id="功能配置"><a href="#功能配置" class="headerlink" title="功能配置"></a>功能配置</h3><p>初始化后的文件空空如也，我们要实现预期功能就得加些配置。配置相关的插件，并配置相关的选项后，运行后预览功能。</p>
<p>index.html配置如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge,chrome=1&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;Description&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0, minimum-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- vue主题 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/docsify@4/lib/themes/vue.css&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 侧边栏折叠 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/docsify-sidebar-collapse/dist/sidebar.min.css&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span>加载中...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">window</span>.<span class="property">$docsify</span> = &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 文档标题</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">name</span>: <span class="string">&#x27;doc-template&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 搜索</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">search</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">placeholder</span>: <span class="string">&quot;搜索&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">paths</span>: <span class="string">&quot;auto&quot;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 加载侧边栏文件</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">loadSidebar</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">alias</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&#x27;.* /_sidebar.md&#x27;</span>: <span class="string">&#x27;/_sidebar.md&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&#x27;/.*/.*/_sidebar.md&#x27;</span>: <span class="string">&#x27;/_sidebar.md&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">subMaxLevel</span>: <span class="number">3</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 自动添加文档标题</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">autoHeader</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 内容分页</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">pagination</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">previousText</span>: <span class="string">&quot;上一篇&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">nextText</span>: <span class="string">&quot;下一篇&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 跨篇章展示</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">crossChapter</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">auto2top</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 侧边栏展示层级</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">sidebarDisplayLevel</span>: <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Docsify v4 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/docsify@4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- plugins --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 搜索插件 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/docsify/lib/plugins/search.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 图片放大插件 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/docsify/lib/plugins/zoom-image.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 代码复制插件 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/docsify-copy-code/dist/docsify-copy-code.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 分页插件 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/docsify-pagination/dist/docsify-pagination.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 侧边栏折叠插件 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/docsify-sidebar-collapse/dist/docsify-sidebar-collapse.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 代码高亮 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/prismjs@1/components/prism-bash.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/prismjs@1/components/prism-java.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>侧边栏配置就是markdown里的无序列表。将文档目录规划好，对应的侧边栏即可配置出来。</p>
<p>我的文档目录如下：</p>
<p><img src="https://s2.loli.net/2022/11/04/RWOjDg4wHtEUkid.png" alt="目录结构"></p>
<p>对应侧边栏_sidebar.md配置如下：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">- Spring 系列</span><br><span class="line"></span><br><span class="line">  - IoC 容器</span><br><span class="line"></span><br><span class="line">    - [<span class="type">BeanDefinition</span> 的资源定位过程](Spring\<span class="number">1</span>.IOC\<span class="number">1</span>.BeanDefinition的资源定位过程.md)</span><br><span class="line">    - [解析<span class="type">BeanDefinition</span>](Spring\<span class="number">1</span>.IOC\<span class="number">2</span>.解析BeanDefinition.md)</span><br><span class="line">  - AOP</span><br><span class="line"></span><br><span class="line">    - [<span class="type">AOP</span> 源码实现及分析](Spring\<span class="number">2</span>.AOP\<span class="number">1</span>.AOP源码实现及分析.md)</span><br><span class="line">- 工具</span><br><span class="line"></span><br><span class="line">  - 文档工具</span><br><span class="line">    - [<span class="type">docsify</span>文档搭建](工具\docsify文档搭建.md)</span><br></pre></td></tr></table></figure>

<h3 id="部署到github"><a href="#部署到github" class="headerlink" title="部署到github"></a>部署到github</h3><p>github创建一个项目仓库，将docs目录下文件上传。然后github仓库设置里配置github page，将page的根目录配置成docs目录即可完成部署。</p>
<p><img src="https://s2.loli.net/2022/11/04/lMxckfZoFevaJih.png" alt="githubpage配置"></p>
<p>本文预览：<a href="http://cjiayang.github.io/doc-template">http://cjiayang.github.io/doc-template</a></p>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul>
<li>文档：<a href="https://docsify.js.org/#/zh-cn/">docsify文档</a></li>
<li>插件：<a href="https://docsify.js.org/#/zh-cn/plugins">docsify插件</a></li>
</ul>
<p>最后留个问题：</p>
<p>文档的图片都只能放在文档顶层目录的image文件中，能不能放到各个文档所在的image文件中呢。暂时还没找到方案。</p>
<p>当然上传图床是一种选择，用typora + PicGo + SMMS图床可以实现。</p>
]]></content>
      <categories>
        <category>devtool</category>
      </categories>
      <tags>
        <tag>docsify</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7安装Redis</title>
    <url>/2020/10/08/redis%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<p>本文介绍CentOS7中Redis的安装实践</p>
<span id="more"></span>

<h2 id="yum安装"><a href="#yum安装" class="headerlink" title="yum安装"></a>yum安装</h2><p>如果能联网，yum安装最快捷，但是yum源中Redis版本不是最新的，所以如果想安装较新版本的Redis需要使用其他方式安装。</p>
<ol>
<li><p>安装EPEL仓库</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install epel-release</span><br><span class="line">yum update</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装Redis</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum -y install redis</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动Redis</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl start redis</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改配置文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/redis.conf</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="源码安装"><a href="#源码安装" class="headerlink" title="源码安装"></a>源码安装</h2><p>当需要较新版本的Redis时，可以使用源码安装，下面以redis-6.0.8为例介绍Redis源码安装。</p>
<h3 id="安装准备"><a href="#安装准备" class="headerlink" title="安装准备"></a>安装准备</h3><p>Redis安装依赖gcc，CentOS系统默认的gcc版本为4.8.5，需要升级到5.3版本以上；执行<code>make test</code><br>时需要依赖tcl库，需要提前安装tcl库</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum -y install gcc tcl</span><br><span class="line">yum -y install devtoolset-9-gcc devtoolset-9-gcc-c++ devtoolset-9-binutils</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">永久启用最新版本gcc</span></span><br><span class="line">echo &quot;source /opt/rh/devtoolset-9/enable&quot; &gt;&gt; /etc/profile</span><br></pre></td></tr></table></figure>

<h3 id="下载Redis"><a href="#下载Redis" class="headerlink" title="下载Redis"></a>下载Redis</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget http://download.redis.io/releases/redis-6.0.8.tar.gz</span><br></pre></td></tr></table></figure>

<h3 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h3><p><code>make install</code>命令会将redis&#x2F;src下的一些脚本拷贝到&#x2F;usr&#x2F;local&#x2F;bin&#x2F;目录下，因为&#x2F;usr&#x2F;local&#x2F;bin&#x2F;目录已经在path环境变量中配置了，所以执行此命令的目的是在任何目录下都可以直接启动停止redis。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -zxf redis-6.0.8.tar.gz -C /usr/local/</span><br><span class="line">cd /usr/local/redis-6.0.8</span><br><span class="line">make MALLOC=libc</span><br><span class="line">make test # 可选择执行</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>

<h3 id="后台运行"><a href="#后台运行" class="headerlink" title="后台运行"></a>后台运行</h3><p>安装完后执行<code>redis-server</code>启动是前台运行，需要修改redis.conf配置文件。在&#x2F;etc目录下创建redis目录，将源码根目录下的redis.conf文件拷贝到&#x2F;etc&#x2F;redis目录，并改名为6379.conf。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir /etc/redis/</span><br><span class="line">cp redis.conf /etc/redis/6379.conf</span><br><span class="line">vim /etc/redis/6379.conf</span><br></pre></td></tr></table></figure>

<p>找到<code>daemonize no</code>并将其改为<code>daemonize yes</code>。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># By default Redis does not run as a daemon. Use &#x27;yes&#x27; if you need it.</span><br><span class="line"># Note that Redis will write a pid file in /var/run/redis.pid when daemonized.</span><br><span class="line">daemonize yes</span><br></pre></td></tr></table></figure>

<p>server启动的时候指定配置文件，就后台启动了。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">redis-server  /etc/redis/6379.conf</span><br></pre></td></tr></table></figure>

<h3 id="以服务方式启动"><a href="#以服务方式启动" class="headerlink" title="以服务方式启动"></a>以服务方式启动</h3><p>修改配置文件可以解决redis前台启动的问题，但是每次启动都指定配置文件，非常不方便。下面介绍以服务的方式启动关闭redis，简化redis服务的操作。</p>
<p>首先切换到redis源码目录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd redis-6.0.8</span><br></pre></td></tr></table></figure>

<p>将utils目录下的redis_init_script文件拷贝到&#x2F;etc&#x2F;init.d目录下，并保存为redis</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cp utils/redis_init_script /etc/init.d/redis_6379</span><br></pre></td></tr></table></figure>

<p>创建redis.service</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/systemd/system/redis.service</span><br></pre></td></tr></table></figure>

<p>redis.service文件输入以下内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Redis on port 6379</span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/etc/init.d/redis_6379 start</span><br><span class="line">ExecStop=/etc/init.d/redis_6379 stop</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.targe</span><br></pre></td></tr></table></figure>

<p>更新服务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl enable redis</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">务必要进行reload</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在centos7下可用service命令启动</span></span><br><span class="line">service redis start</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看服务状态</span></span><br><span class="line">service redis status</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在低于centos7版本下用systemctl</span></span><br><span class="line">systemctl start redis</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>中间件</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle导入导出实践</title>
    <url>/2020/08/18/Oracle%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA%E5%AE%9E%E8%B7%B5/</url>
    <content><![CDATA[<p>本文介绍Oracle导出导入工具expdp和impdp的使用，并使用scott用户演示其用法。</p>
<span id="more"></span>

<h3 id="数据导出"><a href="#数据导出" class="headerlink" title="数据导出"></a>数据导出</h3><p>Oracle提供的expdp工具可以将数据库对象的元数据或数据导出到转储文件中，expdp可以导出表、用户模式、表空间和全数据库4种数据。<br>expdp工具只能将导出的转储文件存放在directory对象对应的磁盘目录中，而不能直接指定转储文件所在的磁盘目录。因此，使用expdp工具时，必须首先建立directory对象，并且需要为数据库用户授予使用directory对象的权限。</p>
<h4 id="EXPDP选项"><a href="#EXPDP选项" class="headerlink" title="EXPDP选项"></a>EXPDP选项</h4><p>可以在命令行输入<code>expdp help=y;</code>获取帮助<br>expdp常用选项：</p>
<ul>
<li>HELP: 帮助信息</li>
<li>DIRECTORY：用于转储文件和日志文件的目录对象</li>
<li>DUMPFILE：指定目标转储文件名的列表</li>
<li>SCHEMAS: 要导出的方案的列表</li>
<li>TABLES: 标识要导出的表的列表<br>例如, TABLES&#x3D;HR.EMPLOYEES,SH.SALES:SALES_1995</li>
<li>TABLESPACES: 标识要导出的表空间的列表</li>
<li>EXCLUDE：排除特定对象类型<br>例如, EXCLUDE&#x3D;SCHEMA:”&#x3D;’HR’”</li>
<li>INCLUDE: 包括特定对象类型</li>
<li>FULL：导出整个数据库</li>
<li>LOGFILE: 指定日志文件名</li>
<li>QUERY: 用于导出表的子集的谓词子句<br>例如, QUERY&#x3D;employees:”WHERE department_id &gt; 10”</li>
</ul>
<h4 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h4><p>为方便演示创建一个具有dba权限的管理员用户，并激活oracle自带的scott用户。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">user</span> manager identified <span class="keyword">by</span> code666 <span class="keyword">default</span> tablespace <span class="keyword">system</span> temporary tablespace temp;</span><br><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">grant</span> <span class="keyword">connect</span>,resource,dba <span class="keyword">to</span> manager;</span><br><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">alter</span> <span class="keyword">user</span> scott account unlock;</span><br><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">alter</span> <span class="keyword">user</span> scott identified <span class="keyword">by</span> tiger;</span><br></pre></td></tr></table></figure>

<h4 id="创建导出目录"><a href="#创建导出目录" class="headerlink" title="创建导出目录"></a>创建导出目录</h4><p>首先在oracle用户下创建导出目录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ mkdir -p /home/oracle/data/dump</span><br></pre></td></tr></table></figure>

<p>然后创建oracle目录对象，并授权</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">or</span> replace directory dump_dir <span class="keyword">as</span> <span class="string">&#x27;/home/oracle/data/dump&#x27;</span>;</span><br><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">grant</span> read,write <span class="keyword">on</span> directory dump_dir <span class="keyword">to</span> scott;</span><br><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">grant</span> read,write <span class="keyword">on</span> directory dump_dir <span class="keyword">to</span> manager;</span><br></pre></td></tr></table></figure>

<h4 id="导出表"><a href="#导出表" class="headerlink" title="导出表"></a>导出表</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">expdp scott/tiger directory=dump_dir dumpfile=table.dmp tables=emp,dept</span></span><br></pre></td></tr></table></figure>

<h4 id="导出模式"><a href="#导出模式" class="headerlink" title="导出模式"></a>导出模式</h4><p>导出模式时，当前用户只能导出当前用户的模式对象，要导出其他用户的对象要求用户必须具有DBA角色或EXP_FULL_DATABASE角色。下面导出scott模式</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">expdp scott/tiger directory=dump_dir dumpfile=schema.dmp schemas=scott</span></span><br></pre></td></tr></table></figure>

<h4 id="导出表空间"><a href="#导出表空间" class="headerlink" title="导出表空间"></a>导出表空间</h4><p>导出表空间是指将一个或多个表空间中的所有对象及数据存储到转储文件中。导出表空间要求用户必须具有DBA角色或EXP_FULL_DATABASE角色，下面用manager用户导出</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">expdp manager/code666 directory=dump_dir dumpfile=tablespace.dmp tablespaces=system</span></span><br></pre></td></tr></table></figure>

<h4 id="全库导出"><a href="#全库导出" class="headerlink" title="全库导出"></a>全库导出</h4><p>导出数据库要求用户必须具有DBA角色或EXP_FULL_DATABASE角色。<br>注意，导出数据库时，不会导出SYS、ORDSYS、ORDPLUGINS、CTXSYS、MDSYS、LBACSYS以及XDB等模式中的对象</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">expdp manager/code666@orcl directory=dump_dir dumpfile=full.dmp full=y logfile=full.log;</span></span><br></pre></td></tr></table></figure>


<h3 id="数据导入"><a href="#数据导入" class="headerlink" title="数据导入"></a>数据导入</h3><p>Oracle提供impdp工具可以将转储文件中的数据库对象的元数据导入到Oracle数据库中，IMPDP也可以进行4种类型的导入操作：导入表、导入模式、导入表空间和导入全数据库。<br>与expdp相似，数据泵导入时，其转储文件被存储在DIRECTORY对象所对应的磁盘目录中，而不能直接指定转储文件所在的磁盘目录。</p>
<h4 id="IMPDP命令"><a href="#IMPDP命令" class="headerlink" title="IMPDP命令"></a>IMPDP命令</h4><p>同样可以在命令行输入<code>impdp help=y;</code>查看impdp获取命令帮助。</p>
<p>下面操作假设拿到dump文件，将dump文件导入到另一台机子中去，所以也需要创建用户和创建目录的操作。导入前需要将dump文件放到导入目录中，并改文件所属用户为oracle。</p>
<h4 id="创建用户-1"><a href="#创建用户-1" class="headerlink" title="创建用户"></a>创建用户</h4><p>创建一个具有dba权限的管理员用户，并激活oracle自带的scott用户。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">user</span> manager identified <span class="keyword">by</span> code666 <span class="keyword">default</span> tablespace <span class="keyword">system</span> temporary tablespace temp;</span><br><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">grant</span> <span class="keyword">connect</span>,resource,dba <span class="keyword">to</span> manager;</span><br><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">alter</span> <span class="keyword">user</span> scott account unlock;</span><br><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">alter</span> <span class="keyword">user</span> scott identified <span class="keyword">by</span> tiger;</span><br></pre></td></tr></table></figure>

<h4 id="创建导入目录"><a href="#创建导入目录" class="headerlink" title="创建导入目录"></a>创建导入目录</h4><p>首先在oracle用户下创建导入目录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> -p /home/oracle/data/imp</span></span><br></pre></td></tr></table></figure>

<p>然后创建oracle目录对象，并授权</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">or</span> replace directory imp_dir <span class="keyword">as</span> <span class="string">&#x27;/home/oracle/data/imp&#x27;</span>;</span><br><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">grant</span> read,write <span class="keyword">on</span> directory imp_dir <span class="keyword">to</span> manager;</span><br></pre></td></tr></table></figure>

<h4 id="导入表"><a href="#导入表" class="headerlink" title="导入表"></a>导入表</h4><p>普通用户只可以将表导入到自己的模式中，但如果以其他用户身份导入表，则要求该用户必须具有IMP_FULL_DATABASE角色和DBA角色。<br>导入表时，既可以将表导入到源模式中，也可以将表导入到其他模式中。以下示例将emp,dept表导入到manager模式中</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">impdp manager/code666 directory=imp_dir dumpfile=table.dmp tables=scott.emp,scott.dept remap_schema=scott:manager</span>  </span><br></pre></td></tr></table></figure>

<h4 id="导入模式"><a href="#导入模式" class="headerlink" title="导入模式"></a>导入模式</h4><p>普通用户可以将对象导入到自身模式中，但如果以其他用户身份导入模式时，则要求该用户必须具有IMP_FULL_DATABASE角色或DBA角色。<br>导入模式时，既可以将模式的所有对象导入到源模式中，也可以将模式的所有对象导入到其他模式中</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">impdp manager/code666 directory=imp_dir dumpfile=schema.dmp remap_schema=scott:manager</span></span><br></pre></td></tr></table></figure>

<h4 id="导入表空间"><a href="#导入表空间" class="headerlink" title="导入表空间"></a>导入表空间</h4><p>导出表空间要求用户必须具有DBA角色或EXP_FULL_DATABASE角色。导入时，可以将数据导入到其他表空间中。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">impdp manager/code666 directory=imp_dir dumpfile=tablespace.dmp remap_tablespace=<span class="built_in">users</span>:system</span></span><br></pre></td></tr></table></figure>

<h4 id="全库导入"><a href="#全库导入" class="headerlink" title="全库导入"></a>全库导入</h4><p>全库导入要求用户必须具有DBA角色或EXP_FULL_DATABASE角色</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">impdp manager/code666 directory=imp_dir dumpfile=ful.dmp full=y</span></span><br></pre></td></tr></table></figure>

<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>Oracle提供的expdp工具和impdp工具都是工作在服务端，可以方便的多粒度的进行数据的导出导入操作，在开发中可以灵活使用。</p>
]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
        <tag>expdp</tag>
        <tag>impdp</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 快捷键</title>
    <url>/2020/08/12/Linux-%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<p>因为经常要用到Linux命令行和vim编辑器，虽然快捷键不多，但每次总会忘记几个，然后又要上网查，零零散散总是记不全，效率太低。本文总结Linux常用的命令行快捷键和vim快捷键，好记性不如烂笔头，多记多练习。有更好的使用经验可以评论分享，共同进步。</p>
<span id="more"></span>

<h2 id="Linux-命令行快捷键"><a href="#Linux-命令行快捷键" class="headerlink" title="Linux 命令行快捷键"></a>Linux 命令行快捷键</h2><p>Linux命令行下可以使用快捷键进行光标移动跳转，编辑查找，发送控制命令。命令行快捷键一般是使用“ctrl + 字母”键组合，熟练操作，可以提高效率。</p>
<h3 id="常用"><a href="#常用" class="headerlink" title="常用"></a>常用</h3><table>
<thead>
<tr>
<th>按键</th>
<th>动作</th>
</tr>
</thead>
<tbody><tr>
<td>ctrl + a</td>
<td>光标移动至行首</td>
</tr>
<tr>
<td>ctrl + e</td>
<td>光标移动至行末</td>
</tr>
<tr>
<td>ctrl + u</td>
<td>删除当前光标前面所有文字（带剪切）</td>
</tr>
<tr>
<td>ctrl + k</td>
<td>删除当前光标后面所有文字（带剪切）</td>
</tr>
<tr>
<td>ctrl + w</td>
<td>删除光标前一个单词</td>
</tr>
<tr>
<td>ctrl + y</td>
<td>粘贴ctrl + u或ctrl + k剪切的内容</td>
</tr>
<tr>
<td>ctrl + p 或者 ↑ 按键</td>
<td>显示上一条历史命令</td>
</tr>
<tr>
<td>ctrl + n 或者 ↓ 按键</td>
<td>显示下一条历史命令</td>
</tr>
<tr>
<td>ctrl + r</td>
<td>搜索历史命令</td>
</tr>
<tr>
<td>ctrl + l</td>
<td>清屏</td>
</tr>
</tbody></table>
<h3 id="光标移动"><a href="#光标移动" class="headerlink" title="光标移动"></a>光标移动</h3><table>
<thead>
<tr>
<th>按键</th>
<th>动作</th>
</tr>
</thead>
<tbody><tr>
<td>ctrl + a</td>
<td>光标移动至行首</td>
</tr>
<tr>
<td>ctrl + e</td>
<td>光标移动至行末</td>
</tr>
<tr>
<td>ctrl + f</td>
<td>光标往右移动一个字符</td>
</tr>
<tr>
<td>ctrl + b</td>
<td>光标往左移动一个字符</td>
</tr>
<tr>
<td>ctrl  + xx</td>
<td>（两个x）在光标和行首之间移动</td>
</tr>
</tbody></table>
<h3 id="编辑命令"><a href="#编辑命令" class="headerlink" title="编辑命令"></a>编辑命令</h3><table>
<thead>
<tr>
<th>按键</th>
<th>动作</th>
</tr>
</thead>
<tbody><tr>
<td>ctrl + u</td>
<td>删除当前光标前面所有文字（带剪切）</td>
</tr>
<tr>
<td>ctrl + k</td>
<td>删除当前光标后面所有文字（带剪切）</td>
</tr>
<tr>
<td>ctrl + w</td>
<td>向左删除一个单词</td>
</tr>
<tr>
<td>ctrl + y</td>
<td>粘贴ctrl + u或ctrl + k剪切的内容</td>
</tr>
<tr>
<td>ctrl + h</td>
<td>向左删除一个字符</td>
</tr>
<tr>
<td>ctrl + d</td>
<td>向右删除一个字符</td>
</tr>
<tr>
<td>ctrl  + _</td>
<td>撤销上一次编辑操作</td>
</tr>
</tbody></table>
<h3 id="控制命令"><a href="#控制命令" class="headerlink" title="控制命令"></a>控制命令</h3><table>
<thead>
<tr>
<th>按键</th>
<th>动作</th>
</tr>
</thead>
<tbody><tr>
<td>ctrl + l</td>
<td>清屏</td>
</tr>
<tr>
<td>ctrl + c</td>
<td>终止命令</td>
</tr>
<tr>
<td>ctrl + s</td>
<td>锁住终端，在vim中也是。按 ctrl +q即可恢复</td>
</tr>
<tr>
<td>ctrl + q</td>
<td>解锁终端</td>
</tr>
<tr>
<td>ctrl + z</td>
<td>后台运行命令</td>
</tr>
<tr>
<td>ctrl + d</td>
<td>退出会话，相当于exit</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>vim</tag>
      </tags>
  </entry>
  <entry>
    <title>虚拟机安装RedHat6.5实践</title>
    <url>/2020/08/10/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85RedHat6.5%E5%AE%9E%E8%B7%B5/</url>
    <content><![CDATA[<p>本文介绍在虚拟机下安装RedHat6.5步骤</p>
<span id="more"></span>

<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>虚拟机创建已在另一篇文章介绍过，安装前需准备redhat6.5的iso镜像文件，可以到开源镜像站下载相应版本。</p>
<ol>
<li>VMware虚拟机15.1.0</li>
<li>rhel-server-6.5-x86_64-dvd.iso镜像文件</li>
</ol>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="虚拟机配置镜像文件"><a href="#虚拟机配置镜像文件" class="headerlink" title="虚拟机配置镜像文件"></a>虚拟机配置镜像文件</h3><p>编辑虚拟机设置  → CD&#x2F;DVD → 使用ISO镜像文件，点击浏览，选择rhel-server-6.5-x86_64-dvd.iso镜像文件所在位置</p>
<p><img src="/vmware-config.png" alt="vmware-config"></p>
<h3 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h3><ol>
<li><p>选择Install or upgrade an existing system<br><img src="/step1.png" alt="step1"></p>
</li>
<li><p>点击Skip<br><img src="/step2.png" alt="step2"></p>
</li>
<li><p>语言默认选择English<br><img src="/step3.png" alt="step3"></p>
</li>
<li><p>键盘默认选U.S. English<br><img src="/step4.png" alt="step4"></p>
</li>
<li><p>选择Basic Storage Device<br><img src="/step5.png" alt="step5"></p>
</li>
<li><p>选择 Yes, discard any data<br><img src="/step6.png" alt="step6"></p>
</li>
<li><p>主机名自定义，点击配置网络，选择eth0网卡，点击Edit<br><img src="/step7.png" alt="step7"></p>
</li>
<li><p>勾选Connect automatically，Ipv4 Settings选项卡中，Method选择Manual手动配置<br>Address填写局域网内未使用的IP，点击应用<br><img src="/step8.png" alt="step8"></p>
</li>
<li><p>时区选择上海，去掉UTC勾选<br><img src="/step9.png" alt="step9"></p>
</li>
<li><p>填写系统root用户密码<br><img src="/step10.png" alt="step10"></p>
</li>
<li><p>自定义安装<br><img src="/step11.png" alt="step11"></p>
</li>
<li><p>创建boot分区</p>
<p>点击Free → 点击Create → 选择 Standard Partition<br><img src="/step12.png" alt="step12"></p>
</li>
<li><p>创建swap分区<br>点击Free → 点击Create → 选择 Standard Partition<br><img src="/step13.png" alt="step13"></p>
</li>
<li><p>创建root分区<br>点击Free → 点击Create → 选择 Standard Partition → 选择 Fill to maximum allowable size<br><img src="/step14.png" alt="step14"></p>
</li>
<li><p>格式化系统<br>点击Format，在弹窗点击Write changes to disk<br><img src="/step15.png" alt="step15"></p>
</li>
<li><p>默认，点击next<br><img src="/step16.png" alt="step16"></p>
</li>
<li><p>选择Desktop桌面版安装<br><img src="/step17.png" alt="step17"></p>
</li>
<li><p>安装完成点击Reboot<br><img src="/step18.png" alt="step18"></p>
</li>
</ol>
<h3 id="首次启动配置"><a href="#首次启动配置" class="headerlink" title="首次启动配置"></a>首次启动配置</h3><ol>
<li>欢迎页直接点击Forward<br><img src="/step19.png" alt="step19"></li>
<li>许可证选择Yes, I agree to the License Agreement，点击Forward<br><img src="/step20.png" alt="step20"></li>
<li>选择稍后注册，点击Forward，弹窗点击Register Later，继续点击Forward<br><img src="/step21.png" alt="step21"></li>
<li>如果不建用户直接点击Forward，在弹窗中点击Yes确认<br><img src="/step22.png" alt="step22"></li>
<li>日期和时间，点击Forward<br><img src="/step23.png" alt="step23"></li>
<li>点击Finish，在弹窗中点击Yes和OK，系统重启。<br><img src="/step24.png" alt="step24"></li>
</ol>
<h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><ol>
<li>root用户登陆<br><img src="/step25.png" alt="step25"></li>
<li>ping <a href="http://www.baidu.com/">www.baidu.com</a> 如果网络能通则成功<br><img src="/step26.png" alt="step26"></li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>VMware</tag>
        <tag>RedHat</tag>
      </tags>
  </entry>
  <entry>
    <title>软件资源下载</title>
    <url>/2020/07/17/%E8%BD%AF%E4%BB%B6%E8%B5%84%E6%BA%90%E4%B8%8B%E8%BD%BD/</url>
    <content><![CDATA[<p>本文搜集开发常用软件资源下载链接。资源在文章发出之前都测试过可以使用，有不可使用的欢迎评论。</p>
<span id="more"></span>

<h2 id="Linux开源镜像"><a href="#Linux开源镜像" class="headerlink" title="Linux开源镜像"></a>Linux开源镜像</h2><p>Linux镜像在国内有很多镜像站可供使用，一般点前几个链接就可以找到资源，其他镜像站供参考。</p>
<ul>
<li><p><strong>开源网站镜像</strong><br>搜狐开源镜像站：<a href="http://mirrors.sohu.com/">http://mirrors.sohu.com/</a><br>阿里云开源镜像：<a href="http://mirrors.aliyun.com/">http://mirrors.aliyun.com/</a><br>首都在线科技股份有限公司：<a href="http://mirrors.yun-idc.com/">http://mirrors.yun-idc.com/</a><br>网易开源镜像站：<a href="http://mirrors.163.com/">http://mirrors.163.com/</a><br>常州贝特康姆软件技术有限公司(原cn99）：<a href="http://centos.bitcomm.cn/">http://centos.bitcomm.cn/</a></p>
</li>
<li><p><strong>大学校园镜像</strong><br>大连理工大学：<a href="http://mirror.dlut.edu.cn/">http://mirror.dlut.edu.cn/</a><br>浙江大学：<a href="http://mirrors.zju.edu.cn/">http://mirrors.zju.edu.cn/</a><br>兰州大学：<a href="http://mirror.lzu.edu.cn/">http://mirror.lzu.edu.cn/</a><br>北京理工大学：<br><a href="http://mirror.bit.edu.cn/">http://mirror.bit.edu.cn</a> (IPv4 only)<br><a href="http://mirror.bit6.edu.cn/">http://mirror.bit6.edu.cn</a> (IPv6 only)<br>北京交通大学：<br><a href="http://mirror.bjtu.edu.cn/">http://mirror.bjtu.edu.cn</a> (IPv4 only)<br><a href="http://debian.bjtu.edu.cn/">http://debian.bjtu.edu.cn</a> (IPv4+IPv6)<br>上海交通大学：<br><a href="http://ftp.sjtu.edu.cn/">http://ftp.sjtu.edu.cn/</a> (IPv4 only)<br><a href="http://ftp6.sjtu.edu.cn/">http://ftp6.sjtu.edu.cn</a> (IPv6 only)<br>清华大学：<br><a href="http://mirrors.tuna.tsinghua.edu.cn/">http://mirrors.tuna.tsinghua.edu.cn/</a> (IPv4+IPv6)<br><a href="http://mirrors.6.tuna.tsinghua.edu.cn/">http://mirrors.6.tuna.tsinghua.edu.cn/</a> (IPv6 only)<br><a href="http://mirrors.4.tuna.tsinghua.edu.cn/">http://mirrors.4.tuna.tsinghua.edu.cn/</a> (IPv4 only)<br>中国科学技术大学：<br><a href="http://mirrors.ustc.edu.cn/">http://mirrors.ustc.edu.cn/</a> (IPv4+IPv6)<br><a href="http://mirrors4.ustc.edu.cn/">http://mirrors4.ustc.edu.cn/</a><br><a href="http://mirrors6.ustc.edu.cn/">http://mirrors6.ustc.edu.cn/</a><br>东北大学：<br><a href="http://mirror.neu.edu.cn/">http://mirror.neu.edu.cn/</a> (IPv4 only)<br><a href="http://mirror.neu6.edu.cn/">http://mirror.neu6.edu.cn/</a> (IPv6 only)<br>华中科技大学：<br><a href="http://mirrors.hust.edu.cn/">http://mirrors.hust.edu.cn/</a><br><a href="http://mirrors.hustunique.com/">http://mirrors.hustunique.com/</a><br><a href="http://ubuntu.uestc.edu.cn/">http://ubuntu.uestc.edu.cn/</a><br>电子科大星辰工作室(少数小众发布版镜像)<br><a href="http://mirrors.stuhome.net/">http://mirrors.stuhome.net/</a></p>
</li>
<li><p><strong>RedHat镜像</strong><br><a href="http://guanjianfeng.com/archives/1159631">Linux操作系统各版本ISO镜像下载（包括oracle linux\redhat\centos\ubuntu\debian等）</a></p>
</li>
</ul>
<h2 id="虚拟机下载"><a href="#虚拟机下载" class="headerlink" title="虚拟机下载"></a>虚拟机下载</h2><p>这里提供VMware各版本资源的下载，下载要注册vmware帐号，本文不提供注册码。</p>
<ul>
<li><p>历史版本<br><a href="https://blog.csdn.net/huageek/article/details/90376127">VMware Workstation for Windows 历史版本</a> </p>
</li>
<li><p>14版本<br><a href="https://my.vmware.com/cn/group/vmware/downloads/details?downloadGroup=WKST-1400-WIN&amp;productId=686&amp;rPId=39186">https://my.vmware.com/cn/group/vmware/downloads/details?downloadGroup=WKST-1400-WIN&amp;productId=686&amp;rPId=39186</a> </p>
</li>
<li><p>15版本<br><a href="https://my.vmware.com/cn/group/vmware/downloads/details?downloadGroup=WKST-1501-WIN&amp;productId=799&amp;rPId=47859">https://my.vmware.com/cn/group/vmware/downloads/details?downloadGroup=WKST-1501-WIN&amp;productId=799&amp;rPId=47859</a></p>
</li>
</ul>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://www.cnblogs.com/Hi-blog/p/Linux-Mirror-Sites.html">中国Linux源镜像站大全</a></li>
<li><a href="http://guanjianfeng.com/archives/1159631">Linux操作系统各版本ISO镜像下载（包括oracle linux\redhat\centos\ubuntu\debian等）</a></li>
<li><a href="https://blog.csdn.net/huageek/article/details/90376127">VMware Workstation for Windows 历史版本</a></li>
</ul>
]]></content>
      <categories>
        <category>资源</category>
      </categories>
      <tags>
        <tag>资源下载</tag>
      </tags>
  </entry>
  <entry>
    <title>VMware虚拟机安装及使用</title>
    <url>/2020/07/17/VMware%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<p><a href="https://www.vmware.com/products/workstation-pro.html">VMware Workstation Pro</a> 是在单个Linux或Windows系统上运行多个操作系统的行业标准。VMware是一款非常好用的虚拟机软件，在软件开发，测试中经常会使用到。本文介绍VMware15.1.0版本在Windows10环境下的安装和使用。</p>
<span id="more"></span>

<h2 id="资源下载"><a href="#资源下载" class="headerlink" title="资源下载"></a>资源下载</h2><p>VMware下载完后，直接安装，然后输入注册码即可使用。官网文档说的比较全面，不过太细了，遇到具体问题再过来翻一翻。</p>
<ul>
<li><p>官网下载地址：<a href="https://download3.vmware.com/software/wkst/file/VMware-workstation-full-15.1.0-13591040.exe">VMware Workstation Pro 15.1.0 Build 9474260</a></p>
</li>
<li><p>官网文档：<a href="https://docs.vmware.com/cn/VMware-Workstation-Pro/15.0/com.vmware.ws.using.doc/GUID-0EE752F8-C159-487A-9159-FE1F646EE4CA.html">使用 VMware Workstation Pro</a></p>
</li>
<li><p>注册码：</p>
<blockquote>
<p>UG5J2-0ME12-M89WY-NPWXX-WQH88<br>GA590-86Y05-4806Y-X4PEE-ZV8E0<br>YA18K-0WY8P-H85DY-L4NZG-X7RAD<br>UA5DR-2ZD4H-089FY-6YQ5T-YPRX6<br>B806Y-86Y05-GA590-X4PEE-ZV8E0<br>ZF582-0NW5N-H8D2P-0XZEE-Z22VA</p>
</blockquote>
</li>
</ul>
<h2 id="VMware工作界面"><a href="#VMware工作界面" class="headerlink" title="VMware工作界面"></a>VMware工作界面</h2><p><img src="/interface.png" alt="用户界面"></p>
<ul>
<li>主页：主页显示了VMware的三大功能，也是最常使用的三个功能</li>
<li>视图：可以选择多个视图查看虚拟机</li>
<li>菜单：提供虚拟机的管理菜单</li>
</ul>
<h2 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h2><p>文件 → 新建虚拟机</p>
<ol>
<li>选择自定义 → 下一步<br><img src="/step1.png" alt="step1"></li>
<li>选择WorkStation15.x → 下一步<br><img src="/step2.png" alt="step2"></li>
<li>选择稍后安装操作系统 → 下一步<br><img src="/step3.png" alt="step3"></li>
<li>选择操作系统，以及操作系统版本<br><img src="/step4.png" alt="step4"></li>
<li>填写虚拟机名称，选择虚拟机文件存放位置<br><img src="/step5.png" alt="step5"></li>
<li>处理器配置默认<br><img src="/step6.png" alt="step6"></li>
<li>虚拟机内存可按推荐内存填写，视实际情况配置<br><img src="/step7.png" alt="step7"></li>
<li>选择桥接网络<br><img src="/step8.png" alt="step8"></li>
<li>I&#x2F;O控制器类型默认<br><img src="/step9.png" alt="step9"></li>
<li>磁盘类型默认</li>
<li>创建新虚拟磁盘<br><img src="/step11.png" alt="step10"></li>
<li>磁盘容量20-50G，视需求而定<br><img src="/step12.png" alt="step11"></li>
<li>磁盘文件默认<br><img src="/step13.png" alt="step12"></li>
<li>自定义硬件，删除声卡和打印机，点击完成<br><img src="/step14.png" alt="step13"></li>
</ol>
<h2 id="虚拟机网络"><a href="#虚拟机网络" class="headerlink" title="虚拟机网络"></a>虚拟机网络</h2><p>虚拟机网络主要有三种模式，桥接模式网络连接、NAT 和仅主机模式网络连接。最常使用也最简单的就是桥接模式。</p>
<h3 id="桥接模式网络连接"><a href="#桥接模式网络连接" class="headerlink" title="桥接模式网络连接"></a>桥接模式网络连接</h3><p>桥接模式网络连接通过使用主机系统上的网络适配器将虚拟机连接到网络。如果主机系统位于网络中，桥接模式网络连接通常是虚拟机访问该网络的最简单途径。</p>
<p>当您将 Workstation Pro 安装到 Windows 或 Linux 主机系统时，系统会设置一个桥接模式网络 (VMnet0)。可以参见<a href="https://docs.vmware.com/cn/VMware-Workstation-Pro/15.0/com.vmware.ws.using.doc/GUID-BAFA66C3-81F0-4FCA-84C4-D9F7D258A60A.html#GUID-BAFA66C3-81F0-4FCA-84C4-D9F7D258A60A">配置桥接模式网络连接</a>。</p>
<h3 id="NAT-模式网络连接"><a href="#NAT-模式网络连接" class="headerlink" title="NAT 模式网络连接"></a>NAT 模式网络连接</h3><p>使用 NAT 模式网络时，虚拟机在外部网络中不必具有自己的 IP 地址。主机系统上会建立单独的专用网络。在默认配置中，虚拟机会在此专用网络中通过 DHCP 服务器获取地址。虚拟机和主机系统共享一个网络标识，此标识在外部网络中不可见。</p>
<p>当您将 Workstation Pro 安装到 Windows 或 Linux 主机系统时，系统会设置一个 NAT 模式网络 (VMnet8)。在您使用<strong>新建虚拟机</strong>向导创建新的虚拟机并选择典型配置类型时，该向导会将虚拟机配置为使用默认 NAT 默认网络。</p>
<p>您只能有一个 NAT 模式网络。可以参见<a href="https://docs.vmware.com/cn/VMware-Workstation-Pro/15.0/com.vmware.ws.using.doc/GUID-89311E3D-CCA9-4ECC-AF5C-C52BE6A89A95.html#GUID-89311E3D-CCA9-4ECC-AF5C-C52BE6A89A95">配置网络地址转换</a>。</p>
<h3 id="仅主机模式网络连接"><a href="#仅主机模式网络连接" class="headerlink" title="仅主机模式网络连接"></a>仅主机模式网络连接</h3><p>仅主机模式网络连接可创建完全包含在主机中的网络。仅主机模式网络连接使用对主机操作系统可见的虚拟网络适配器，在虚拟机和主机系统之间提供网络连接。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://docs.vmware.com/cn/VMware-Workstation-Pro/15.0/com.vmware.ws.using.doc/GUID-0EE752F8-C159-487A-9159-FE1F646EE4CA.html">使用 VMware Workstation Pro</a></p>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>VMware</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux升级bash版本</title>
    <url>/2020/07/13/linux-bash%E5%8D%87%E7%BA%A7/</url>
    <content><![CDATA[<p>因为bash低版本存在漏洞，需要升级版本。本文介绍在操作系统redhat6.5下将系统自带的bash-4.1.2版本升级到bash-5.0。</p>
<span id="more"></span>

<h2 id="bash漏洞简介"><a href="#bash漏洞简介" class="headerlink" title="bash漏洞简介"></a>bash漏洞简介</h2><p>bash4.3及以下版本的bash存在远程执行代码漏洞，包括但不限于Redhat、CentOS、Ubuntu、Debian、Fedora 等平台。</p>
<ul>
<li><p>CVE漏洞名称：CVE-2014-6271</p>
</li>
<li><p>中文漏洞名称：破壳</p>
<p><strong>验证：</strong></p>
<blockquote>
<p>通过普通用户登录主机，在bash shell下执行：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">env x=&#x27;() &#123; :;&#125;; echo vulnerable&#x27; bash -c &quot;echo this is a test&quot;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果输出 ：this is a test </p>
<p>则不存bash在远程执行代码漏洞;</p>
</blockquote>
<blockquote>
<p>如果输出：<br>vulnerable<br>this is a test<br>则存在bash远程执行代码漏洞</p>
</blockquote>
</blockquote>
</li>
</ul>
<p>针对以上漏洞可将bash升级到4.3以上版本，下面说明升级步骤。</p>
<h2 id="升级bash版本"><a href="#升级bash版本" class="headerlink" title="升级bash版本"></a>升级bash版本</h2><ol>
<li><p><strong>下载最新版bash</strong><br>bash下载地址：<a href="http://ftp.gnu.org/gnu/bash/">http://ftp.gnu.org/gnu/bash/</a><br>本文下载的是bash5.0版本： <a href="http://ftp.gnu.org/gnu/bash/bash-5.0.tar.gz">http://ftp.gnu.org/gnu/bash/bash-5.0.tar.gz</a></p>
</li>
<li><p><strong>查看当前系统bash版本</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@node1 ~]# /bin/bash -version</span><br><span class="line">GNU bash, version 4.1.2(1)-release (x86_64-redhat-linux-gnu)</span><br><span class="line">Copyright (C) 2009 Free Software Foundation, Inc.</span><br><span class="line">License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;</span><br><span class="line"></span><br><span class="line">This is free software; you are free to change and redistribute it.</span><br><span class="line">There is NO WARRANTY, to the extent permitted by law.</span><br></pre></td></tr></table></figure>

<p>可以知道当前版本为4.1.2</p>
</li>
<li><p><strong>升级bash</strong><br>上传bash版本包到服务器，解压升级</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@node1 ~]# tar -zxf bash-5.0.tar.gz </span><br><span class="line">[root@node1 ~]# cd bash-5.0</span><br><span class="line">[root@node1 bash-5.0]# ./configure &amp;&amp; make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<p>因为bash默认是安装在&#x2F;usr&#x2F;local&#x2F;bin&#x2F;目录下，所以需要创建一个链接到 &#x2F;bin&#x2F;目录下！</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@node1 bash-5.0]# mv /bin/bash /bin/bash.bak</span><br><span class="line">[root@node1 bash-5.0]# ln -s /usr/local/bin/bash /bin/bash</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>验证</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@node1 ~]# /bin/bash -version</span><br><span class="line">GNU bash，版本 5.0.0(1)-release (x86_64-pc-linux-gnu)</span><br><span class="line">Copyright (C) 2019 Free Software Foundation, Inc.</span><br><span class="line">许可证 GPLv3+: GNU GPL 许可证第三版或者更新版本 &lt;http://gnu.org/licenses/gpl.html&gt;</span><br><span class="line"></span><br><span class="line">本软件是自由软件，您可以自由地更改和重新发布。</span><br><span class="line">在法律许可的情况下特此明示，本软件不提供任何担保。</span><br><span class="line">[root@node1 bash-5.0]# env x=&#x27;() &#123; :;&#125;; echo vulnerable&#x27; bash -c &quot;echo this is a test&quot;</span><br><span class="line">this is a test</span><br></pre></td></tr></table></figure>

<p>现在bash版本已经是 5.0.0，bash漏洞也已修复</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>bash</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle11.2.0.4打补丁实践</title>
    <url>/2020/07/10/oracle-Opatch/</url>
    <content><![CDATA[<p>本文介绍如何给Oracle数据库打补丁，数据库版本为Oracle11.2.0.4，单实例，操作系统为redhat6.5。</p>
<span id="more"></span>

<h2 id="下载升级包"><a href="#下载升级包" class="headerlink" title="下载升级包"></a>下载升级包</h2><ol>
<li><p><strong>下载升级包</strong></p>
<p>因为没有MOS帐号，从网上下载了升级包</p>
<blockquote>
<p>p30670774_112040_Linux-x86-64.zip：数据库补丁<br>p6880880_112000_Linux-x86-64.zip：opatch升级包<br>百度云链接：<a href="https://pan.baidu.com/s/1ZvTQr-gI889mylgzUXkdPw">https://pan.baidu.com/s/1ZvTQr-gI889mylgzUXkdPw</a><br>提取码：plhp<br>微云链接：<a href="https://share.weiyun.com/k8CbxL3K">https://share.weiyun.com/k8CbxL3K</a></p>
</blockquote>
<p>opatch是安装补丁的程序，数据库软件安装完成后，就自带了opatch，但是版本太旧了，所以这里下载最新的opatch，p6880880_112000_Linux-x86-64.zip包就是用来升级opatch用的。</p>
</li>
</ol>
<h2 id="升级opatch"><a href="#升级opatch" class="headerlink" title="升级opatch"></a>升级opatch</h2><p>opatch的升级只要将新版本的包解压，覆盖系统原始的文件即可。</p>
<ol start="2">
<li><p><strong>查看原始opatch信息</strong></p>
<p>查看原始版本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[oracle@node1 ~]$ cd $ORACLE_HOME/OPatch</span><br><span class="line">[oracle@node1 OPatch]$ ./opatch version	# 查看原始版本</span><br><span class="line"></span><br><span class="line">OPatch Version: 11.2.0.3.4</span><br><span class="line">OPatch succeeded.</span><br></pre></td></tr></table></figure>

<p>查看补丁情况</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[oracle@node1 OPatch]$ ./opatch lsinventory	# 查看补丁情况</span><br><span class="line"></span><br><span class="line">Oracle 中间补丁程序安装程序版本 11.2.0.3.4</span><br><span class="line">版权所有 (c) 2012, Oracle Corporation。保留所有权利。</span><br><span class="line"></span><br><span class="line">Oracle Home       : /home/oracle/app/oracle/product/11.2.0/dbhome_1</span><br><span class="line">Central Inventory : /home/oracle/app/oraInventory</span><br><span class="line">   from           : /home/oracle/app/oracle/product/11.2.0/dbhome_1/oraInst.loc</span><br><span class="line">OPatch version    : 11.2.0.3.4</span><br><span class="line">OUI version       : 11.2.0.4.0</span><br><span class="line">Log file location : /home/oracle/app/oracle/product/11.2.0/dbhome_1/cfgtoollogs/opatch/opatch2020-07-02_16-23-35下午_1.log</span><br><span class="line"></span><br><span class="line">Lsinventory Output file location : /home/oracle/app/oracle/product/11.2.0/dbhome_1/cfgtoollogs/opatch/lsinv/lsinventory2020-07-02_16-23-35下午.txt</span><br><span class="line"></span><br><span class="line">----------------------------------------------------------------------------</span><br><span class="line">已安装的顶级产品 (1):</span><br><span class="line">Oracle Database 11g                                                  11.2.0.4.0</span><br><span class="line">此 Oracle 主目录中已安装 1 个产品。</span><br><span class="line">此 Oracle 主目录中未安装任何中间补丁程序。</span><br><span class="line">----------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">OPatch succeeded.</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>备份原opatch</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[oracle@node1 OPatch]$ cd $ORACLE_HOME</span><br><span class="line">[oracle@node1 dbhome_1]$ mv OPatch OPatch.bak</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>解压新下载的opatch包</strong></p>
<p>将下载的opatch包上传到oracle的家目录，上传完后，解压到<code>$ORACLE_HOME</code>下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[oracle@node1 dbhome_1]$ cd ~</span><br><span class="line">[oracle@node1 ~]$ unzip p6880880_112000_Linux-x86-64.zip -d $ORACLE_HOME</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>检查opatch是否升级成功</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[oracle@node1 ~]$ cd $ORACLE_HOME/OPatch</span><br><span class="line">[oracle@node1 OPatch]$ ./opatch version	# 查看版本信息</span><br><span class="line"></span><br><span class="line">OPatch Version: 11.2.0.3.21</span><br><span class="line">OPatch succeeded.</span><br></pre></td></tr></table></figure>

<p>现在版本为11.2.0.3.21，说明升级成功</p>
</li>
</ol>
<h2 id="数据库打补丁"><a href="#数据库打补丁" class="headerlink" title="数据库打补丁"></a>数据库打补丁</h2><ol start="6">
<li><p><strong>关闭监听、数据库</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[oracle@node1 OPatch]$ lsnrctl stop	# 关闭监听</span><br><span class="line">[oracle@node1 ~]$ sqlplus / as sysdba</span><br><span class="line"><span class="meta prompt_">SQL&gt; </span><span class="language-bash">shutdown immediate</span> </span><br><span class="line"><span class="meta prompt_">SQL&gt; </span><span class="language-bash">quit</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>解压补丁包</strong></p>
<p>将下载的补丁包上传到oracle家目录，并解压</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[oracle@node1 ~]$ cd ~</span><br><span class="line">[oracle@node1 ~]$ unzip p30670774_112040_Linux-x86-64.zip </span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>校验冲突</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[oracle@node1 ~]$ cd 30670774/</span><br><span class="line">[oracle@node1 30670774]$ $ORACLE_HOME/OPatch/opatch prereq CheckConflictAgainstOHWithDetail -ph ./</span><br><span class="line"></span><br><span class="line">Oracle 临时补丁程序安装程序版本 11.2.0.3.21</span><br><span class="line">版权所有 (c) 2020, Oracle Corporation。保留所有权利。</span><br><span class="line"></span><br><span class="line">PREREQ session</span><br><span class="line"></span><br><span class="line">Oracle 主目录       ：/home/oracle/app/oracle/product/11.2.0/dbhome_1</span><br><span class="line">主产品清单：/home/oracle/app/oraInventory</span><br><span class="line">   来自           ：/home/oracle/app/oracle/product/11.2.0/dbhome_1/oraInst.loc</span><br><span class="line">OPatch 版本    ：11.2.0.3.21</span><br><span class="line">OUI 版本       ：11.2.0.4.0</span><br><span class="line">日志文件位置：/home/oracle/app/oracle/product/11.2.0/dbhome_1/cfgtoollogs/opatch/opatch2020-07-02_16-54-06下午_1.log</span><br><span class="line"></span><br><span class="line">Invoking prereq &quot;checkconflictagainstohwithdetail&quot;</span><br><span class="line"></span><br><span class="line">Prereq &quot;checkConflictAgainstOHWithDetail&quot; passed.</span><br><span class="line"></span><br><span class="line">OPatch succeeded.</span><br></pre></td></tr></table></figure>

<p>由于这个测试库之前并没有打补丁，所以这里就没有补丁冲突的问题，如果这里显示有冲突，再去网MOS上查找相关解决方案。</p>
</li>
<li><p><strong>执行打补丁</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[oracle@node1 30670774]$ $ORACLE_HOME/OPatch/opatch apply</span><br></pre></td></tr></table></figure>

<p><img src="/confirmAndContinue.png" alt="确认并继续"></p>
<p>这里要输入3次y和一次回车，打补丁的过程耗是比较久的，耐心等待</p>
</li>
<li><p><strong>检查打补丁情况</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[oracle@node1 30670774]$ $ORACLE_HOME/OPatch/opatch lsinventory # 检查打补丁情况</span><br></pre></td></tr></table></figure>

<p>这里会列出系统已打的补丁情况</p>
</li>
<li><p><strong>启动数据库，并运行sql文件</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[oracle@node1 30670774]$ cd $ORACLE_HOME/rdbms/admin</span><br><span class="line">[oracle@node1 30670774]$ sqlplus / as sysdba</span><br><span class="line"><span class="meta prompt_">SQL&gt; </span><span class="language-bash">startup</span></span><br><span class="line"><span class="meta prompt_">SQL&gt; </span><span class="language-bash">@catbundle.sql psu apply</span></span><br><span class="line"><span class="meta prompt_">SQL&gt; </span><span class="language-bash">quit</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>启动监听</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[oracle@node1 admin]$ lsnrctl start</span><br></pre></td></tr></table></figure></li>
</ol>
<p>至此数据库打补丁已经全部完成</p>
<h2 id="回退数据库补丁"><a href="#回退数据库补丁" class="headerlink" title="回退数据库补丁"></a>回退数据库补丁</h2><p><strong>数据库在做变更时，需要考虑回退方案</strong>，接下来介绍如何回退数据库补丁</p>
<ol start="13">
<li><p><strong>关闭监听、数据库</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[oracle@node1 ~]$ lsnrctl stop	# 关闭监听</span><br><span class="line">[oracle@node1 ~]$ sqlplus / as sysdba</span><br><span class="line"><span class="meta prompt_">SQL&gt; </span><span class="language-bash">shutdown immediate</span> </span><br><span class="line"><span class="meta prompt_">SQL&gt; </span><span class="language-bash">quit</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>回退补丁</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[oracle@node1 ~]$ $ORACLE_HOME/OPatch/opatch rollback -id 30670774</span><br></pre></td></tr></table></figure>

<p><img src="/rollback.png" alt="回退补丁"></p>
<p>这里要回复一次y，回退过程比较耗时，需耐心等待</p>
</li>
<li><p><strong>启动数据库，并运行sql文件</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[oracle@node1 ~]$ cd $ORACLE_HOME/rdbms/admin</span><br><span class="line">[oracle@node1 admin]$ sqlplus / as sysdba</span><br><span class="line"><span class="meta prompt_">SQL&gt; </span><span class="language-bash">startup</span></span><br><span class="line"><span class="meta prompt_">SQL&gt; </span><span class="language-bash">@catbundle_PSU_ORCL_ROLLBACK.sql	<span class="comment"># 这里的ORCL为实例名称</span></span></span><br><span class="line"><span class="meta prompt_">SQL&gt; </span><span class="language-bash">quit</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>检查回退情况</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[oracle@node1 admin]$ $ORACLE_HOME/OPatch/opatch lsinventory # 检查打补丁情况</span><br><span class="line"></span><br><span class="line">Oracle 临时补丁程序安装程序版本 11.2.0.3.21</span><br><span class="line">版权所有 (c) 2020, Oracle Corporation。保留所有权利。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Oracle 主目录       ：/home/oracle/app/oracle/product/11.2.0/dbhome_1</span><br><span class="line">主产品清单：/home/oracle/app/oraInventory</span><br><span class="line">   来自           ：/home/oracle/app/oracle/product/11.2.0/dbhome_1/oraInst.loc</span><br><span class="line">OPatch 版本    ：11.2.0.3.21</span><br><span class="line">OUI 版本       ：11.2.0.4.0</span><br><span class="line">日志文件位置：/home/oracle/app/oracle/product/11.2.0/dbhome_1/cfgtoollogs/opatch/opatch2020-07-02_18-24-48下午_1.log</span><br><span class="line"></span><br><span class="line">Lsinventory Output file location : /home/oracle/app/oracle/product/11.2.0/dbhome_1/cfgtoollogs/opatch/lsinv/lsinventory2020-07-02_18-24-48下午.txt</span><br><span class="line"></span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">Local Machine Information::</span><br><span class="line">Hostname: localhost</span><br><span class="line">ARU platform id: 226</span><br><span class="line">ARU platform description:: Linux x86-64</span><br><span class="line"></span><br><span class="line">已安装的顶级产品 (1):</span><br><span class="line"></span><br><span class="line">Oracle Database 11g                                                  11.2.0.4.0</span><br><span class="line">此 Oracle 主目录中已安装 1 个产品。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">此 Oracle 主目录中未安装任何临时补丁程序。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">OPatch succeeded.</span><br></pre></td></tr></table></figure>

<p>可以看到，补丁已经被卸载了</p>
</li>
<li><p><strong>启动监听</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[oracle@node1 admin]$ lsnrctl start</span><br></pre></td></tr></table></figure></li>
</ol>
<p>这样补丁回退就结束了</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本文介绍了单实例数据库打补丁的步骤，仅做参考，实际应以补丁包中的readme为准。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://www.cnblogs.com/ddzj01/p/12097467.html">Oracle - 数据库打补丁最佳实践</a></li>
<li>readme.html</li>
</ul>
]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
        <tag>OPatch</tag>
      </tags>
  </entry>
  <entry>
    <title>初识powershell</title>
    <url>/2020/06/06/devtool-powershell/</url>
    <content><![CDATA[<p>PowerShell基础</p>
<span id="more"></span>

<h2 id="快捷使用"><a href="#快捷使用" class="headerlink" title="快捷使用"></a>快捷使用</h2><h3 id="控制台快捷键"><a href="#控制台快捷键" class="headerlink" title="控制台快捷键"></a>控制台快捷键</h3><table>
<thead>
<tr>
<th>按键</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>左箭头</td>
<td>光标向左移动一个字符</td>
</tr>
<tr>
<td><em>Ctrl + 左箭头</em></td>
<td>光标向左移动一个单词</td>
</tr>
<tr>
<td>右箭头</td>
<td>光标向右移动一个字符</td>
</tr>
<tr>
<td><em>Ctrl + 右箭头</em></td>
<td>光标向右移动一个单词</td>
</tr>
<tr>
<td><em>Home</em>键</td>
<td>光标移动到行首</td>
</tr>
<tr>
<td><em>End</em>键</td>
<td>光标移动到行尾</td>
</tr>
<tr>
<td><em>Delete</em>键</td>
<td>删除光标指向的字符</td>
</tr>
<tr>
<td><em>Backspace</em>键或<em>Ctrl + H</em></td>
<td>删除光标左边第一个字符</td>
</tr>
<tr>
<td><em>Ctrl + End</em>键</td>
<td>删除从光标到行尾的所有字符</td>
</tr>
<tr>
<td><em>Esc</em>键</td>
<td>清除当前输入的所有字符</td>
</tr>
<tr>
<td><em>Tab</em>键</td>
<td><em>Tab</em>键自动完成命令。</td>
</tr>
<tr>
<td>上箭头</td>
<td>向上查询历史命令</td>
</tr>
<tr>
<td>下箭头</td>
<td>向下查询历史命令</td>
</tr>
<tr>
<td><em>F8</em>键</td>
<td>搜索命令对应的历史记录，<br />在命令上输入命令的一部分内容后，<br />按<em>F8</em>键，可以得到匹配该输入的历史命令。</td>
</tr>
<tr>
<td><em>Enter</em>键</td>
<td>回车（<em>Enter</em>）</td>
</tr>
<tr>
<td><em>Ctrl + C</em></td>
<td><em>终止当前执行的命令</em></td>
</tr>
<tr>
<td><em>Ctrl + Break</em></td>
<td><em>终止当前执行的命令</em></td>
</tr>
<tr>
<td>Ctrl + l</td>
<td>清屏</td>
</tr>
<tr>
<td><em>Alt + F7</em>键</td>
<td>清除所有曾经输入的命令历史记录</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>devtool</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>powershell</tag>
      </tags>
  </entry>
  <entry>
    <title>初识windows Terminal</title>
    <url>/2020/06/06/devtool-windowsTerminal/</url>
    <content><![CDATA[<p>windows terminal是微软推出的简单易用的<strong>命令行终端工具</strong>，支持cmd命令，PowerShell命令，和WSL子系统命令。本文简单介绍windows Terminal的配置。</p>
<span id="more"></span>

<h2 id="Windows-Terminal简介"><a href="#Windows-Terminal简介" class="headerlink" title="Windows Terminal简介"></a>Windows Terminal简介</h2><p>Windows 终端是一个面向命令行工具和 shell（如命令提示符、PowerShell 和适用于 Linux 的 Windows 子系统 (WSL)）用户的新式终端应用程序。 它的主要功能包括多个选项卡、窗格、Unicode 和 UTF-8 字符支持、GPU 加速文本呈现引擎，还可以用于创建你自己的主题并自定义文本、颜色、背景和快捷键绑定。</p>
<p>以上是官方文档的介绍，可以看出Windows Terminal首先是一个微软官方提供的一个<strong>终端工具</strong>，包含了许多便于用户使用的新特性，并提供自定义配置功能。我们可以方便的使用Windows Terminal中执行cmd命令，PowerShell命令，和WSL子系统命令。</p>
<h3 id="如何安装"><a href="#如何安装" class="headerlink" title="如何安装"></a>如何安装</h3><p>直接从 <a href="https://aka.ms/terminal">Microsoft Store</a> 安装 Windows Terminal。</p>
<h3 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h3><p><a href="https://docs.microsoft.com/zh-cn/windows/terminal/">https://docs.microsoft.com/zh-cn/windows/terminal/</a></p>
<h2 id="自定义配置"><a href="#自定义配置" class="headerlink" title="自定义配置"></a>自定义配置</h2><h3 id="在哪配置"><a href="#在哪配置" class="headerlink" title="在哪配置"></a>在哪配置</h3><p>打开 Windows 终端，在下拉菜单中选择“设置” 。 终端会使用默认文本编辑器打开 <code>settings.json</code> 文件。在<code>settings.json</code>文件中，终端支持自定义影响整个应用程序的<a href="https://docs.microsoft.com/zh-cn/windows/terminal/customize-settings/global-settings">全局属性</a>、影响每个配置文件的设置的<a href="https://docs.microsoft.com/zh-cn/windows/terminal/customize-settings/profile-settings">配置文件属性</a>以及允许你使用键盘与终端交互的<a href="https://docs.microsoft.com/zh-cn/windows/terminal/customize-settings/key-bindings">键绑定</a>。</p>
<p>配置文件的具体配置官方文档已经写的足够简洁了，一般使用默认配置即可满足需求，如果需要修改快捷键或者主题样式，可以按官方文档的配置步骤配置即可。下面对配置文件进行解释。</p>
<h3 id="配置文件注释"><a href="#配置文件注释" class="headerlink" title="配置文件注释"></a>配置文件注释</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 最外层的都是全局属性，配置的指影响全局</span><br><span class="line">&#123;</span><br><span class="line">    &quot;$schema&quot;: &quot;https://aka.ms/terminal-profiles-schema&quot;,</span><br><span class="line">    &quot;alwaysShowTabs&quot; : true,</span><br><span class="line">    &quot;defaultProfile&quot; : &quot;&#123;61c54bbd-c2c6-5271-96e7-009a87ff44bf&#125;&quot;, // 配置打开新标签页时使用的是哪个profile，值对应profiles里对象的guid</span><br><span class="line">    &quot;initialCols&quot; : 120,</span><br><span class="line">    &quot;initialRows&quot; : 30,</span><br><span class="line">    &quot;keybindings&quot; : // 配置快捷键的地方</span><br><span class="line">    [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;command&quot; : &quot;closeTab&quot;,</span><br><span class="line">            &quot;keys&quot; : </span><br><span class="line">            [</span><br><span class="line">                &quot;ctrl+w&quot;</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;command&quot; : &quot;newTab&quot;,</span><br><span class="line">            &quot;keys&quot; : </span><br><span class="line">            [</span><br><span class="line">                &quot;ctrl+t&quot;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;requestedTheme&quot; : &quot;system&quot;,</span><br><span class="line">    &quot;showTabsInTitlebar&quot; : true,</span><br><span class="line">    &quot;showTerminalTitleInTitlebar&quot; : true,</span><br><span class="line">    &quot;profiles&quot; :  // 每个终端的配置</span><br><span class="line">    [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;acrylicOpacity&quot; : 0.9,</span><br><span class="line">            // &quot;background&quot; : &quot;#012456&quot;,</span><br><span class="line">            &quot;closeOnExit&quot; : true,</span><br><span class="line">            &quot;colorScheme&quot; : &quot;Solarized Dark&quot;, 		// 颜色主题，对应的是schemes对象的name值</span><br><span class="line">            &quot;commandline&quot; : &quot;powershell.exe&quot;,		// 打开时执行的命令</span><br><span class="line">            &quot;cursorColor&quot; : &quot;#FFFFFF&quot;,</span><br><span class="line">            &quot;cursorShape&quot; : &quot;bar&quot;,</span><br><span class="line">            &quot;fontFace&quot; : &quot;Consolas&quot;,  				// 字体</span><br><span class="line">            &quot;fontSize&quot; : 10,  						// 字体大小</span><br><span class="line">            &quot;guid&quot; : &quot;&#123;61c54bbd-c2c6-5271-96e7-009a87ff44bf&#125;&quot;,	// 终端guid</span><br><span class="line">            &quot;historySize&quot; : 9001,</span><br><span class="line">            &quot;icon&quot; : &quot;ms-appx:///ProfileIcons/&#123;61c54bbd-c2c6-5271-96e7-009a87ff44bf&#125;.png&quot;,</span><br><span class="line">            &quot;name&quot; : &quot;Windows PowerShell&quot;, 			// 终端名</span><br><span class="line">            &quot;padding&quot; : &quot;0, 0, 0, 0&quot;,</span><br><span class="line">            &quot;snapOnInput&quot; : true,</span><br><span class="line">            &quot;startingDirectory&quot; : &quot;%USERPROFILE%&quot;,</span><br><span class="line">            &quot;useAcrylic&quot; : false					// 透明背景</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;schemes&quot; : 	// 主题样式</span><br><span class="line">    [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;background&quot; : &quot;#0C0C0C&quot;, 	// 背景颜色</span><br><span class="line">            &quot;black&quot; : &quot;#0C0C0C&quot;,</span><br><span class="line">            &quot;blue&quot; : &quot;#0037DA&quot;,</span><br><span class="line">            &quot;brightBlack&quot; : &quot;#767676&quot;,</span><br><span class="line">            &quot;brightBlue&quot; : &quot;#3B78FF&quot;,</span><br><span class="line">            &quot;brightCyan&quot; : &quot;#61D6D6&quot;,</span><br><span class="line">            &quot;brightGreen&quot; : &quot;#16C60C&quot;,</span><br><span class="line">            &quot;brightPurple&quot; : &quot;#B4009E&quot;,</span><br><span class="line">            &quot;brightRed&quot; : &quot;#E74856&quot;,</span><br><span class="line">            &quot;brightWhite&quot; : &quot;#F2F2F2&quot;,</span><br><span class="line">            &quot;brightYellow&quot; : &quot;#F9F1A5&quot;,</span><br><span class="line">            &quot;cyan&quot; : &quot;#3A96DD&quot;,</span><br><span class="line">            &quot;foreground&quot; : &quot;#CCCCCC&quot;,	//前景颜色</span><br><span class="line">            &quot;green&quot; : &quot;#13A10E&quot;,</span><br><span class="line">            &quot;name&quot; : &quot;Campbell&quot;,		//主题名称</span><br><span class="line">            &quot;purple&quot; : &quot;#881798&quot;,</span><br><span class="line">            &quot;red&quot; : &quot;#C50F1F&quot;,</span><br><span class="line">            &quot;white&quot; : &quot;#CCCCCC&quot;,</span><br><span class="line">            &quot;yellow&quot; : &quot;#C19C00&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>devtool</category>
        <category>windows</category>
      </categories>
      <tags>
        <tag>windows terminal</tag>
      </tags>
  </entry>
  <entry>
    <title>利用Hexo在GitHub Page搭建博客</title>
    <url>/2020/05/21/blog-hexo/</url>
    <content><![CDATA[<p>Hexo 是一个快速、简洁且高效的博客框架。本文记录利用Hexo在GitHub Pages 上搭建博客的过程，以备忘。</p>
<span id="more"></span>

<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>为了搭建博客，经历了一番波折，也翻了好多文章，一些值得参考的文章会在文章后面列出。总结起来博客搭建经历了以下几个过程。</p>
<p>第一阶段，搭建博客，并将文章上传到github上。这个过程比较简单，基本安装完node.js，git客户端后按Hexo官方教程即可实现。这个阶段遇到的问题是执行<code>hexo d</code>命令后只将Hexo解析后的代码发布到github上，并没有将博客的配置代码和文章源码上传到github上，通常写博客都会在多台电脑上写，这些配置和博客源码需要在多台电脑同步，按上述操作并不能满足需求，所以到网上继续翻。</p>
<p>第二阶段，删除第一阶段创建的github仓库，重新创建，创建完成后继续创建一个source源码分支，用于保存博客的源代码。这个阶段遇到些困难，细节后面会讲到。</p>
<p>第三阶段，选择NexT主题，并对主题做个性化配置。</p>
<p>所以，利用Hexo在github上搭建博客，如果有保存源码需求的，首先要考虑如何保存源码（可考虑使用github分支或另建一个仓库），然后选择主题，如果想博客漂亮一点可以美化美化，然后就可以开始写博客了。</p>
<h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>搭建博客过程需安装的环境：</p>
<ul>
<li>Windows10</li>
<li>Node.js</li>
<li>Git</li>
<li>hexo: 4.2.0</li>
<li>NexT</li>
</ul>
<h2 id="GitHub-Pages-上搭建博客"><a href="#GitHub-Pages-上搭建博客" class="headerlink" title="GitHub Pages 上搭建博客"></a>GitHub Pages 上搭建博客</h2><p>因为考虑到要保存源码，所以在github上创建名为<code>用户名.github.io</code>的仓库之后，立即创建一个source分支用来保存源码。</p>
<p>在 Hexo 中有两份主要的配置文件，其名称都是 <code>_config.yml</code>。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。</p>
<p>为了描述方便，在以下说明中，将前者称为 <strong>站点配置文件</strong>， 后者称为 <strong>主题配置文件</strong>。</p>
<h3 id="github上创建仓库"><a href="#github上创建仓库" class="headerlink" title="github上创建仓库"></a>github上创建仓库</h3><p>假定github的用户名为james，在github上新建一个仓库名为<code>james.github.io</code>的仓库，创建完成后默认会有一个master分支，我们再创建一个source分支，并将source分支设置为默认分支，用于保存源码，此时master跟source分支都仅只有一个README.md文件。source分支怎么用，后面会解释。</p>
<h3 id="本地电脑搭建Hexo"><a href="#本地电脑搭建Hexo" class="headerlink" title="本地电脑搭建Hexo"></a>本地电脑搭建Hexo</h3><ol>
<li><p>安装hexo-cli，在Git Bash窗口输入命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install -g hexo-cli</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>初始化博客，新建一个文件夹hexo ，并切换到hexo文件夹，执行命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo init</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">ls</span></span></span><br><span class="line">_config.yml    package.json       scaffolds/  themes/</span><br><span class="line">node_modules/  package-lock.json  source/</span><br></pre></td></tr></table></figure>

<p>初始化过程中会将<a href="https://github.com/hexojs/hexo-starter.git">https://github.com/hexojs/hexo-starter.git</a>代码克隆到hexo文件夹内。此处的_config.yml即为Hexo的 <strong>站点配置文件</strong>。</p>
</li>
<li><p>下载依赖包，执行命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>依赖包下载完成后，就可以打包并执行hexo内置Web服务器：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo g <span class="comment"># 生成静态文件</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo s <span class="comment"># 启动服务器</span></span></span><br></pre></td></tr></table></figure></li>
</ol>
<p>浏览器中输入 <a href="http://localhost:4000/">http://localhost:4000/</a> 就可以本地预览博客了。</p>
<h3 id="更换NexT主题"><a href="#更换NexT主题" class="headerlink" title="更换NexT主题"></a>更换NexT主题</h3><p>Hexo主题文件放在themes文件夹下，默认主题为landscape，要更换主题，只需将主题文件放到themes文件内，并修改<strong>站点配置文件</strong>的配置项即可。</p>
<ol>
<li><p>克隆NexT主题，在站点根目录下，执行命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next.git themes/next</span></span><br></pre></td></tr></table></figure>

<p>主题文件克隆完成后，进入.&#x2F;themes&#x2F;next目录，将**.git**目录删除，这个目录是NexT主题的git仓库，需要删除，不然会冲突。</p>
</li>
<li><p>修改站点配置文件，将theme字段配置为next。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>重启Hexo服务器</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo g</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo s</span></span><br></pre></td></tr></table></figure></li>
</ol>
<p>浏览器刷新，即可看到效果。</p>
<h3 id="部署到github"><a href="#部署到github" class="headerlink" title="部署到github"></a>部署到github</h3><p>接下来要做的就是把通过命令<code>hexo g</code>生成的静态文件保存到github仓库的master分支下，然后把站点的配置及博客源码保存到source分支下。</p>
<p>第一步，我们先将通过命令<code>hexo g</code>生成的静态文件部署到github上，看下效果。</p>
<ol>
<li><p>修改<strong>站点配置文件</strong>，配置Hexo生成的静态文件上传的目的地址。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: &#x27;git&#x27;</span><br><span class="line">  repo:</span><br><span class="line">    github: https://github.com/james/james.github.io.git //这里即github仓库地址</span><br><span class="line">  branch: master //这里必须是master分支，否则看不到效果</span><br></pre></td></tr></table></figure>
</li>
<li><p>然后在站点根目录下执行：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo g</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo d</span></span><br></pre></td></tr></table></figure></li>
</ol>
<p>执行<code>hexo d</code>命令完成后，在浏览器输入<code>https://james.github.io</code>即可看到部署后的效果。到这里我们已经将本地博客发布到github上了。</p>
<p>第二步，我们还需把源码部署到github的source分支上，用source分支保存源码，方便再各台电脑上同步源码及配置。</p>
<p>在本地电脑再创建一个空文件夹，名为source（随便取），进入source文件夹，将第一步创建的github仓库的source分支克隆到该目录下。因为已经将source分支设置为默认分支，直接克隆得到的就是source分支。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/james/james.github.io.git</span><br></pre></td></tr></table></figure>

<p>克隆下来会有一个james.github.io目录，这个目录里面的.git目录就是博客的源码仓库了。接下来的操作都在james.github.io目录下进行，hexo目录的使命已经完成。</p>
<p>我们将刚刚hexo目录里的除**.git**目录（该目录是隐藏的，需要把隐藏目录显示出来）外所有文件都拷贝到james.github.io目录里，然后在该目录创建一个.gitignore文件，.gitignore文件内容如下:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log6</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br></pre></td></tr></table></figure>

<p>即文件里匹配的内容不需要上传到source分支下。创建好.gitignore文件后，我们就可以将源代码上传到source分支了，就是普通的git提交代码的操作，在james.github.io目录下执行：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git add .</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git commit -m <span class="string">&quot;hexo博客源码分支首次上传&quot;</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git push</span></span><br></pre></td></tr></table></figure>

<p>执行以上命令后，在github仓库的source分支下，就可以看到提交的代码了。至此，博客源代码已经上传到到github仓库的source分支下了。</p>
<p>那么以后就在james.github.io目录下进行博客编写<code>hexo new</code>，生成<code>hexo g</code>，预览<code>hexo s</code>和发布<code>hexo d</code>了，执行<code>hexo d</code>后就会将Hexo生成的静态文件部署到github仓库的master分支下。部署完成后，在james.github.io目录下执行git命令：<code>git add .</code>，<code>git commit -m &quot;xxx&quot;</code>，<code>git push</code> ，就可以将当前电脑写的代码部署到source分支下了。</p>
<p>当在另外一台电脑需要写作时，如果是第一次写，将仓库克隆下来，再执行<code>npm install</code>安装好依赖库，就可以得到跟原电脑一样的配置了。如果不是第一次写，那直接拉取代码即可完成同步操作了。</p>
<h2 id="站点配置"><a href="#站点配置" class="headerlink" title="站点配置"></a>站点配置</h2><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>Hexo 官网：<a href="https://hexo.io/zh-cn/docs/configuration">https://hexo.io/zh-cn/docs/configuration</a></p>
<p>站点配置在<strong>站点配置文件</strong>中配置，即根目录下的_config.yml配置文件，大部分的配置先保持默认即可，有需要修改的时候再改。进行下一步之前先改下网站信息：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Monkey</span> <span class="string">Young</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;路漫漫其修远兮&#x27;</span></span><br><span class="line"><span class="attr">description:</span> [<span class="string">阅读</span>, <span class="string">记录</span>, <span class="string">前行</span>]</span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">jychen</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></span><br></pre></td></tr></table></figure>

<h3 id="Hexo常用命令"><a href="#Hexo常用命令" class="headerlink" title="Hexo常用命令"></a>Hexo常用命令</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo init <span class="comment"># 初始化网站</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo new &lt;title&gt; <span class="comment"># 新建文章</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo g <span class="comment"># hexo g是hexo generate命令的缩写，就是将我们用markdown写的博客文件解析成静态资源文件，解析后的文件在public文件夹下。</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo s <span class="comment"># hexo s是hexo server命令的缩写。启动服务器，默认访问网址为： http://localhost:4000/。</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo d <span class="comment"># hexo d是hexo deploy命令的缩写，这个命令会将public的文件上传到第一步配置的github仓库的master分支下。</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo clean <span class="comment">#清除缓存文件 (db.json) 和已生成的静态文件 (public)。</span></span></span><br></pre></td></tr></table></figure>

<h2 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h2><p>NexT 官方文档：<a href="http://theme-next.iissnan.com/getting-started">http://theme-next.iissnan.com/getting-started </a></p>
<p>最新版本文档：<a href="https://theme-next.js.org/docs/getting-started/">https://theme-next.js.org/docs/getting-started/</a></p>
<p>最新版本文档还不支持中文，旧版本的文档已经很全，可直接看旧版本文档。主题配置文件为.&#x2F;themes&#x2F;next目录下的_config.yml，下面列出一些本博客用到的配置。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 主题</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Pisces</span></span><br><span class="line"><span class="comment">#scheme: Gemini</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义配置文件</span></span><br><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">  <span class="comment">#head: source/_data/head.swig</span></span><br><span class="line">  <span class="comment">#header: source/_data/header.swig</span></span><br><span class="line">  <span class="comment">#sidebar: source/_data/sidebar.swig</span></span><br><span class="line">  <span class="comment">#postMeta: source/_data/post-meta.swig</span></span><br><span class="line">  <span class="comment">#postBodyEnd: source/_data/post-body-end.swig</span></span><br><span class="line">  <span class="comment">#footer: source/_data/footer.swig</span></span><br><span class="line">  <span class="comment">#bodyEnd: source/_data/body-end.swig</span></span><br><span class="line">  <span class="comment">#variable: source/_data/variables.styl</span></span><br><span class="line">  <span class="comment">#mixin: source/_data/mixins.styl</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">source/_data/styles.styl</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 目录设置</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span> </span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="attr">movies:</span> <span class="string">/movies/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-film</span></span><br><span class="line">  <span class="attr">books:</span> <span class="string">/books/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-book</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || fa fa-heartbeat</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 侧边栏社交账号</span></span><br><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">https://github.com/cjiayang</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br><span class="line">  <span class="string">豆瓣:</span> <span class="string">https://www.douban.com/people/99588562/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-film</span></span><br><span class="line">  <span class="string">知乎:</span> <span class="string">https://www.zhihu.com/people/yang-zi-43-81-44</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-question-circle</span></span><br><span class="line">  <span class="string">简书:</span> <span class="string">https://www.jianshu.com/u/129784edb0b6</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-book</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文末打赏功能</span></span><br><span class="line"><span class="attr">reward:</span></span><br><span class="line">  <span class="attr">wechatpay:</span> <span class="string">/images/wechatpay.png</span></span><br><span class="line">  <span class="comment">#alipay: /images/alipay.png</span></span><br><span class="line">  <span class="comment">#paypal: /images/paypal.png</span></span><br><span class="line">  <span class="comment">#bitcoin: /images/bitcoin.png</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># github角</span></span><br><span class="line"><span class="attr">github_banner:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">permalink:</span> <span class="string">https://github.com/yourname</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">Follow</span> <span class="string">me</span> <span class="string">on</span> <span class="string">GitHub</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># valine评论</span></span><br><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">appid:</span> <span class="string">g2JcDOgE11SRuaMu7LMFSMAA-gzGzoHsz</span> <span class="comment"># Your leancloud application appid</span></span><br><span class="line">  <span class="attr">appkey:</span> <span class="string">tE9EIqQRVvHB9X3uQyKkOCdI</span> <span class="comment"># Your leancloud application appkey</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">false</span> <span class="comment"># Mail notifier</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">false</span> <span class="comment"># Verification code</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">Just</span> <span class="string">go</span> <span class="string">go</span> <span class="comment"># Comment box placeholder</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">mm</span> <span class="comment"># Gravatar style</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment"># Custom comment header</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># Pagination size</span></span><br><span class="line">  <span class="attr">language:</span> <span class="string">zh-cn</span> <span class="comment"># Language, available values: en, zh-cn</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">false</span> <span class="comment"># Article reading statistic</span></span><br><span class="line">  <span class="attr">comment_count:</span> <span class="literal">true</span> <span class="comment"># If false, comment count will only be displayed in post page, not in home page</span></span><br><span class="line">  <span class="attr">recordIP:</span> <span class="literal">false</span> <span class="comment"># Whether to record the commenter IP</span></span><br><span class="line">  <span class="attr">serverURLs:</span> <span class="comment"># When the custom domain name is enabled, fill it in here (it will be detected automatically by default, no need to fill in)</span></span><br><span class="line">  <span class="comment">#post_meta_order: 0</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 百度统计</span></span><br><span class="line"><span class="attr">baidu_analytics:</span> <span class="string">xxxxxxxxxxxxxxxxxxx</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># leancloud访问统计</span></span><br><span class="line"><span class="attr">leancloud_visitors:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">app_id:</span> <span class="string">xxxxx-xxxxxxx</span></span><br><span class="line">  <span class="attr">app_key:</span> <span class="string">xxxxxxxxxxxx</span></span><br><span class="line">  <span class="comment"># Required for apps from CN region</span></span><br><span class="line">  <span class="attr">server_url:</span> <span class="comment"># &lt;your server url&gt;</span></span><br><span class="line">  <span class="comment"># Dependencies: https://github.com/theme-next/hexo-leancloud-counter-security</span></span><br><span class="line">  <span class="comment"># If you don&#x27;t care about security in leancloud counter and just want to use it directly</span></span><br><span class="line">  <span class="comment"># (without hexo-leancloud-counter-security plugin), set `security` to `false`.</span></span><br><span class="line">  <span class="attr">security:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不算子统计</span></span><br><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors_icon:</span> <span class="string">fa</span> <span class="string">||</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">total_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_views_icon:</span> <span class="string">fa</span> <span class="string">||</span> <span class="string">fa-eye</span></span><br><span class="line">  <span class="attr">post_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post_views_icon:</span> <span class="string">fa</span> <span class="string">||</span> <span class="string">fa-eye</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 本地搜索功能</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 文章末尾添加“本文结束”标记</span></span><br><span class="line"><span class="attr">passage_end_tag:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>



<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="在文章中插入图片"><a href="#在文章中插入图片" class="headerlink" title="在文章中插入图片"></a>在文章中插入图片</h3><p>在写文章时，经常会有配图的需求。Hexo中有多种图片插入方式，可以将图片存放在本地引用或者将图片放在CDN或者图床上引用。</p>
<h4 id="本地引用"><a href="#本地引用" class="headerlink" title="本地引用"></a>本地引用</h4><ul>
<li><p><strong>绝对路径</strong></p>
<p>当Hexo项目中只用到少量图片时，可以将图片统一放在<code>source/images</code>文件夹中，通过markdown语法访问它们。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">我是一张图片</span>](<span class="link">/images/imagename.jpg</span>)</span><br></pre></td></tr></table></figure>

<p>图片既可以在首页内容中访问到，也可以在文章正文中访问到。</p>
</li>
<li><p><strong>相对路径</strong><br>图片除了可以放在统一的<code>images</code>文件夹中，还可以放在文章自己的目录中。文章的目录可以通过配置站点<strong>配置文件</strong><code>_config.yml</code>来生成。将post_asset_folder配置项改为true。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure>

<p>将<code>_config.yml</code>文件中的配置项<code>post_asset_folder</code>设为<code>true</code>后，执行命令<code>$ hexo new post_name</code>，在<code>source/_posts</code>中会生成文章<code>post_name.md</code>和同名文件夹<code>post_name</code>。将图片资源放在<code>post_name</code>中，文章就可以使用相对路径引用图片资源了。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![](<span class="link">imagename.jpg</span>)</span><br></pre></td></tr></table></figure>

<p>上述是markdown的引用方式，图片只能在文章中显示，但无法在首页中正常显示。</p>
<p>如果希望图片在文章和首页中同时显示，可以使用标签插件语法。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_posts/post_name/image.jpg&#123;% asset_img image.jpg This is an image %&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="本地引用-1"><a href="#本地引用-1" class="headerlink" title="本地引用"></a>本地引用</h4><p>除了在本地存储图片，还可以将图片上传到一些免费的图床或CDN服务中，图片上传后会生成对应的url地址，将地址直接拿来引用即可。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol>
<li><a href="https://hexo.io/zh-cn/docs/">Hexo 官方文档</a></li>
<li><a href="http://theme-next.iissnan.com/getting-started">NexT 官方文档 </a></li>
<li><a href="https://tding.top/archives/aad98408.html">Hexo 搭建个人博客文章汇总</a></li>
<li><a href="https://leay.net/2020/03/23/hexo-next/">尝试折腾了下用 Hexo-Next-Theme 搭建的博客</a></li>
<li><a href="https://www.simon96.online/2018/10/12/hexo-tutorial/">最全Hexo博客搭建</a></li>
</ol>
]]></content>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title>PLSQL12使用</title>
    <url>/2019/11/06/devtool-plsql/</url>
    <content><![CDATA[<p>PLSQL是一款强大的Oracle数据库开发工具，熟练PLSQL常用配置和快捷使用，可以显著提高开发效率。本文对PLSQL12.0.7版本的下载，安装，汉化，和日常使用技巧做记录。</p>
<span id="more"></span>



<h2 id="PLSQL下载安装及汉化"><a href="#PLSQL下载安装及汉化" class="headerlink" title="PLSQL下载安装及汉化"></a>PLSQL下载安装及汉化</h2><h3 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h3><p>PLSQL12官网下载：  <a href="https://www.allroundautomations.com/files/plsqldev1207x64.msi">plsqldev1207x64.msi</a> </p>
<p>汉化可执行文件下载：<a href="https://www.allroundautomations.com/plsqldevlang/120/index.html"> PL&#x2F;SQL Developer - Language Packs </a></p>
<p><img src="https://i.loli.net/2019/11/13/IN8AicbCqn3Gup9.png" alt="plsql_pic0.png"></p>
<h3 id="安装及汉化"><a href="#安装及汉化" class="headerlink" title="安装及汉化"></a>安装及汉化</h3><ul>
<li>下载 12.0.7x64位版本  <a href="https://www.allroundautomations.com/files/plsqldev1207x64.msi">plsqldev1207x64.msi</a>  ，双击安装，安装时选择Enter licence information输入注册码如下：</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">product code： 4vkjwhfeh3ufnqnmpr9brvcuyujrx3n3le</span><br><span class="line">serial Number：226959</span><br><span class="line">password: xs374ca</span><br></pre></td></tr></table></figure>

<p>  <img src="https://i.loli.net/2019/11/14/3ThPfsB7IboXJiV.gif" alt="devtool_plsql_gif1.gif"></p>
<ul>
<li><p>双击chinese.exe，将目录选在上一步PL&#x2F;SQL的安装目录下，完成后会在安装目录下生成Chinese.lang文件。启动PL&#x2F;SQL，免登录进入，选择Preferences -&gt; Appearance，语言选择Chinese.lang，点击Apply，返回主页面之后即可汉化完成</p>
<p><img src="https://i.loli.net/2019/11/14/PwhSCk5amAXeZ4l.gif" alt="devtool_plsql_gif2.gif"></p>
</li>
</ul>
<h2 id="Oracle客户端下载"><a href="#Oracle客户端下载" class="headerlink" title="Oracle客户端下载"></a>Oracle客户端下载</h2><h3 id="下载Oracle客户端"><a href="#下载Oracle客户端" class="headerlink" title="下载Oracle客户端"></a>下载Oracle客户端</h3><p>Oracle客户端下载页面：<a href="https://www.oracle.com/database/technologies/instant-client/downloads.html">Oracle Instant Client Downloads</a>，</p>
<p>点击选择 <a href="https://www.oracle.com/database/technologies/instant-client/winx64-64-downloads.html">Instant Client for Microsoft Windows (x64)</a> ，选择与自己安装数据库相匹配的客户端版本， 下载Instant Client Package - Basic 包，如我的Oracle版本是Version 11.2.0.4.0，则下载 <a href="https://www.oracle.com/database/technologies/instant-client/winx64-64-downloads.html#license-lightbox">instantclient-basic-windows.x64-11.2.0.4.0.zip</a> ，解压到plsql安装的同级目录（也可其他目录，主要是好找）</p>
<p>  <img src="https://i.loli.net/2019/11/14/QRjJ7WOXFbyKSTY.gif" alt="devtool_plsql_gif3.gif"></p>
<h3 id="PL-x2F-SQL配置Oracle客户端"><a href="#PL-x2F-SQL配置Oracle客户端" class="headerlink" title="PL&#x2F;SQL配置Oracle客户端"></a>PL&#x2F;SQL配置Oracle客户端</h3><p>免登录进入PLSQL，点击首选项 -&gt; 连接，Oracle注目录名和OCI库选择Oracle客户端解压目录下的oci.dll文件，点击应用，重启后即可在页面连接登录<br><img src="https://i.loli.net/2019/11/14/JFenlED5PTvYUI4.png" alt="plsql_pic9.png"></p>
<h3 id="PL-x2F-SQL配置"><a href="#PL-x2F-SQL配置" class="headerlink" title="PL&#x2F;SQL配置"></a>PL&#x2F;SQL配置</h3><h4 id="视图配置"><a href="#视图配置" class="headerlink" title="视图配置"></a>视图配置</h4><p>切换到<code>视图</code>选项卡，勾选连接和对象浏览器，勾选单文档，调整窗口布局后，点击保存布局。</p>
<p><img src="https://i.loli.net/2019/11/14/Eobm1IFcsnwgf6a.png" alt="devtool_plsql_pic1.png"></p>
<h4 id="连接配置"><a href="#连接配置" class="headerlink" title="连接配置"></a>连接配置</h4><p>切换到<code>配置</code>选项卡，点击<code>连接</code>按钮，添加经常使用的连接信息，不同连接可以选不同的颜色进行区分。重启PL&#x2F;SQL之后，就可以在登录界面上看到已经填写好的连接，直接双击即可登录，不用每次输入连接信息。</p>
<p><img src="https://i.loli.net/2019/11/18/RphNMajLwf8rq9e.png" alt="devtool_plsql_pic4.png"></p>
<p><img src="https://i.loli.net/2019/11/18/KdzcYvXGmDTJnRg.png" alt="devtool_plsql_pic5.png"></p>
<h4 id="对象浏览器配置"><a href="#对象浏览器配置" class="headerlink" title="对象浏览器配置"></a>对象浏览器配置</h4><p><code>首选项 -&gt; 用户界面 - &gt; 浏览器</code>，点击文件夹，对象浏览器各个常用的对象如表，视图，函数等可以调整顺序和改变文件夹的颜色，方便使用。也可切换到<code>配置</code>选项卡，点击<code>对象浏览器文件夹</code>按钮，进行配置。</p>
<p><img src="https://i.loli.net/2019/11/14/UAYViHs7cDEnPr8.gif" alt="devtool_plsql_gif6.gif"></p>
<h4 id="自动代码替换配置"><a href="#自动代码替换配置" class="headerlink" title="自动代码替换配置"></a>自动代码替换配置</h4><p>设置常用的代码简写可以显著提高代码编写效率，导航到<code>首选项 → 用户界面 → 编辑器 → 自动替换</code>，点击编辑，可以为常用的关键字和查询语句设置代码补全。设置后，编写SQL语句时只要输入简写字母，然后按空格键，即可快速替换成配置的代码。以下代码供参考：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">s = SELECT</span><br><span class="line">f = FROM</span><br><span class="line">w = WHERE</span><br><span class="line">o = ORDER BY</span><br><span class="line">d = DELETE</span><br><span class="line">sf = SELECT * FROM</span><br><span class="line">df = DELETE FROM</span><br><span class="line">sc = SELECT COUNT (*) FROM</span><br></pre></td></tr></table></figure>



<p><img src="https://i.loli.net/2019/11/14/vOwJnzimt2LVxP8.gif" alt="devtool_plsql_gif5.gif"></p>
<h4 id="美化器配置"><a href="#美化器配置" class="headerlink" title="美化器配置"></a>美化器配置</h4><p>配置美化格式，配置完后可以保存成文件，在其他机子也可以用</p>
<p><img src="https://i.loli.net/2019/11/14/IrNvxQJbOqyLRAY.png" alt="devtool_plsql_pic2.png"></p>
<h4 id="快捷键配置"><a href="#快捷键配置" class="headerlink" title="快捷键配置"></a>快捷键配置</h4><p><code>首选项 -&gt; 用户界面 -&gt; 键配置</code>设置常用的快捷键，如打开SQL窗口和命令窗口的快捷键<br><img src="https://i.loli.net/2019/11/14/x32vGRN6PeLaOKu.png" alt="devtool_plsql_pic3.png"></p>
<h4 id="工具使用"><a href="#工具使用" class="headerlink" title="工具使用"></a>工具使用</h4><p>在工具选项卡常用的有导出用户对象，比较用户对象，导出表，比较表数据的功能，功能都比较强大。</p>
<h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><hr>
<ul>
<li><a href="https://blog.csdn.net/sl1992/article/details/80489413">PLSQL Developer 12.0.7连接Oracle12c数据库</a></li>
<li><a href="https://www.cnblogs.com/shizilukou123/p/9149358.html"> PLSQL Developer 12 注册码 </a></li>
</ul>
]]></content>
      <categories>
        <category>devtool</category>
      </categories>
      <tags>
        <tag>开发工具</tag>
        <tag>PLSQL12</tag>
      </tags>
  </entry>
</search>
